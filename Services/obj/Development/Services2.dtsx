<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/23/2021 8:58:20 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="BMASTPC40"
  DTS:CreatorName="BRAKE_NT\Steve.Waibel"
  DTS:DTSID="{3CE19EBC-5330-40F5-B7F7-F49E850C1F5C}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.157"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="8"
  DTS:VersionGUID="{695E2457-76AE-4238-8F28-2E23824F92FF}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[brakesql.Shopware]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{E8651885-F138-4CAE-834E-E8F180FFA9D3}"
      DTS:ObjectName="brakesql.Shopware">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=brakesql;Initial Catalog=Shopware;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{598835BA-70C4-48E4-9AE5-2B8054A5197A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vUpdated_after">
      <DTS:VariableValue
        DTS:DataType="8">2021-01-01T13:33:27Z</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Delete duplicates"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{EF6A0C0A-47B3-48E3-BE52-406CE582725A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Delete duplicates"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E8651885-F138-4CAE-834E-E8F180FFA9D3}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="DELETE FROM [Shopware].[dbo].[SRV_Services] where id in (select id FROM [Shopware].[dbo].[SRV_Services_TMP])&#xA;GO&#xA;&#xA;DELETE FROM [Shopware].[dbo].[SRV_Hazmats] where id in (select id FROM [Shopware].[dbo].[SRV_Hazmats_TMP])&#xA;GO&#xA;&#xA;DELETE FROM [Shopware].[dbo].[SRV_Inspections] where id in (select id FROM [Shopware].[dbo].[SRV_Inspections_TMP])&#xA;GO&#xA;&#xA;DELETE FROM [Shopware].[dbo].[SRV_Labors] where id in (select id FROM [Shopware].[dbo].[SRV_Labors_TMP])&#xA;GO&#xA;&#xA;DELETE FROM [Shopware].[dbo].[SRV_Parts] where id in (select id FROM [Shopware].[dbo].[SRV_Parts_TMP])&#xA;GO&#xA;&#xA;DELETE FROM [Shopware].[dbo].[SRV_Sublets] where id in (select id FROM [Shopware].[dbo].[SRV_Sublets_TMP])&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Last Updated"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{24A68B7C-B18D-45B5-820D-10FEC5B59A73}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Last Updated"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E8651885-F138-4CAE-834E-E8F180FFA9D3}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="SELECT  max([updated_at]) as LastUpdate FROM [Shopware].[dbo].[SRV_Services]"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="LastUpdate"
            SQLTask:DtsVariableName="User::vUpdated_after" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Services"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{58848F37-526E-424F-A4BB-8C0E5D51856B}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Services"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Get Services\JSON Source (Services)"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
              name="JSON Source (Services)"
              usesDispositions="true"
              version="33">
              <properties>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any numeric data types"
                  expressionType="Notify"
                  name="TreatBlankNumberAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for bool data types"
                  expressionType="Notify"
                  name="TreatBlankBoolAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any date/time data types"
                  expressionType="Notify"
                  name="TreatBlankDateAsNull">true</property>
                <property
                  dataType="System.Int32"
                  description="Encoding of source file"
                  expressionType="Notify"
                  name="Encoding"
                  typeConverter="ZappySys.Common.EncodingType">0</property>
                <property
                  dataType="System.String"
                  description="Character set for text (e.g. windows-1250 )"
                  expressionType="Notify"
                  name="CharacterSet"></property>
                <property
                  dataType="System.Int32"
                  description="Defines how to read the JSON file or direct string"
                  expressionType="Notify"
                  name="AccessMode"
                  typeConverter="ZappySys.Common.Ssis.FileValueAccessMode">2</property>
                <property
                  dataType="System.String"
                  description="Defines how to read the JSON file or direct string"
                  expressionType="Notify"
                  name="DirectValue"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Variable name which holds JSON string"
                  expressionType="Notify"
                  name="ValueVariable"
                  typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack150.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                <property
                  dataType="System.String"
                  description="Variable name which holds data file path or url"
                  expressionType="Notify"
                  name="PathVariable"
                  typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack150.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                <property
                  dataType="System.String"
                  description="JSON file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                  expressionType="Notify"
                  name="DirectPath"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">https://app.shop-ware-api-sandbox.com/api/v1/tenants/211/services?page=1&amp;per_page=100&amp;updated_after={{User::vUpdated_after}}</property>
                <property
                  dataType="System.Boolean"
                  description="Include files from sub folders too."
                  expressionType="Notify"
                  name="Recursive">false</property>
                <property
                  dataType="System.Boolean"
                  description="By default process stops with error if specified local file is not found. Set this property to true if you wish to continue rather than throwing file not found error."
                  expressionType="Notify"
                  name="ContinueOnFileNotFoundError">false</property>
                <property
                  dataType="System.String"
                  description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                  expressionType="Notify"
                  name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;application/json&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Content-Type&lt;/name&gt;&lt;value&gt;application/json&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-Api-Partner-Id&lt;/name&gt;&lt;value&gt;1e7a17c8-42f4-49d4-b508-3e00443e0ea6&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;X-Api-Secret&lt;/name&gt;&lt;value&gt;vm1Am8RHfuWwLRnu_Bzzp1cvCSKsWzaBaXRd4xt5qoI&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                <property
                  dataType="System.String"
                  description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                  expressionType="Notify"
                  name="HttpRequestData"></property>
                <property
                  dataType="System.String"
                  description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                  expressionType="Notify"
                  name="HttpRequestMethod">GET</property>
                <property
                  dataType="System.Int32"
                  description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                  expressionType="Notify"
                  name="HttpRequestContentType"
                  typeConverter="ZappySys.Common.Web.HttpRequestContentType">0</property>
                <property
                  dataType="System.Boolean"
                  description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. By default file content type is determined based on extension however you can supply content type manually for any field using this way [ YourFileFieldName.Content-Type=some-content-type ]. By default File Upload Field always includes Content-Type in the request (non file fields do not have content-type by default unless you supply manually). For some reason if you dont want to use Content-Type header in your request then supply blank Content-Type to exclude this header altogather [e.g. SomeFieldName.Content-Type= ]. In below example we have supplied Content-Type for file2 and SomeField1, all other fields are using default content-type.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.json&#xA;file2.Content-Type=application/json&#xA;SomeField1=aaaaaaa&#xA;SomeField1.Content-Type=text/plain&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterHandle&#xA;"
                  expressionType="Notify"
                  name="IsMultiPartUpload">false</property>
                <property
                  dataType="System.Int32"
                  description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                  expressionType="Notify"
                  name="JsonFormat"
                  typeConverter="ZappySys.Json.JsonFormat">1</property>
                <property
                  dataType="System.Boolean"
                  description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                  expressionType="Notify"
                  name="UseProxy">false</property>
                <property
                  dataType="System.String"
                  description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                  expressionType="Notify"
                  name="ProxyUrl"></property>
                <property
                  dataType="System.Boolean"
                  description="Enable passing userid and password to proxy server"
                  expressionType="Notify"
                  name="UseProxyCreds">false</property>
                <property
                  dataType="System.String"
                  description="Proxy username"
                  expressionType="Notify"
                  name="ProxyUserName"></property>
                <property
                  dataType="System.String"
                  description="Proxy password"
                  expressionType="Notify"
                  name="ProxyPassword"></property>
                <property
                  dataType="System.String"
                  description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                  expressionType="Notify"
                  name="NextUrlAttribute"></property>
                <property
                  dataType="System.String"
                  description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                  expressionType="Notify"
                  name="PrevUrlAttribute"></property>
                <property
                  dataType="System.String"
                  description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                  expressionType="Notify"
                  name="NextUrlStopIndicator"></property>
                <property
                  dataType="System.String"
                  description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                  expressionType="Notify"
                  name="StopIndicatorAttribute"></property>
                <property
                  dataType="System.String"
                  description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common use case of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                  expressionType="Notify"
                  name="NextUrlSuffix"></property>
                <property
                  dataType="System.Int32"
                  description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                  expressionType="Notify"
                  name="NextUrlWait">0</property>
                <property
                  dataType="System.Boolean"
                  description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                  expressionType="Notify"
                  name="ContinueOnUrlNotFoundError">false</property>
                <property
                  dataType="System.Boolean"
                  description="Continue when any type of exception occurs during http request"
                  expressionType="Notify"
                  name="ContineOnAnyError">false</property>
                <property
                  dataType="System.Boolean"
                  description="Continue on error when specified substring found in response"
                  expressionType="Notify"
                  name="ContineOnErrorForMessage">false</property>
                <property
                  dataType="System.Boolean"
                  description="Continue on error when specified status code returned from web server"
                  expressionType="Notify"
                  name="ContineOnErrorForStatusCode">false</property>
                <property
                  dataType="System.Boolean"
                  description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                  expressionType="Notify"
                  name="ConsumeResponseOnError">false</property>
                <property
                  dataType="System.Int32"
                  description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                  expressionType="Notify"
                  name="ErrorStatusCodeToMatch">404</property>
                <property
                  dataType="System.String"
                  description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                  expressionType="Notify"
                  name="ErrorSubstringToMatch"></property>
                <property
                  dataType="System.String"
                  description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                  expressionType="Notify"
                  name="CookieContainerVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                  expressionType="Notify"
                  name="RequestTimeout">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                  expressionType="Notify"
                  name="SecurityProtocol"
                  typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType">0</property>
                <property
                  dataType="System.Boolean"
                  description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                  expressionType="Notify"
                  name="EnableCompressionSupport">true</property>
                <property
                  dataType="System.Boolean"
                  description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                  expressionType="Notify"
                  name="IgnoreCertificateErrors">false</property>
                <property
                  dataType="System.Boolean"
                  description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                  expressionType="Notify"
                  name="AllowUnsecureSuite">false</property>
                <property
                  dataType="System.Boolean"
                  description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                  expressionType="Notify"
                  name="UseConnection">false</property>
                <property
                  dataType="System.Int32"
                  description="Specified how you want to loop through multiple pages returned by REST API."
                  expressionType="Notify"
                  name="PagingMode"
                  typeConverter="ZappySys.Common.RestApiPagingMode">1</property>
                <property
                  dataType="System.Boolean"
                  description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagenumber$] placeholders anywhere in the Body where you wish to insert extracted Page token. If you must set encoded token then you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                  expressionType="Notify"
                  name="EnablePageTokenForBody">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                  expressionType="Notify"
                  name="HasDifferentNextPageInfo">false</property>
                <property
                  dataType="System.String"
                  description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                  expressionType="Notify"
                  name="PagePlaceholders"></property>
                <property
                  dataType="System.String"
                  description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                  expressionType="Notify"
                  name="FirstPageBodyPart"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                  expressionType="Notify"
                  name="NextPageBodyPart"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                  expressionType="Notify"
                  name="PagingMaxPagesExpr">$.total_pages</property>
                <property
                  dataType="System.String"
                  description="Expression to extract Maximum records to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.total_rows ) to read total pages to loop through using this property. This setting is ignored if you set PagingMaxPagesExpr."
                  expressionType="Notify"
                  name="PagingMaxRowsExpr"></property>
                <property
                  dataType="System.String"
                  description="When you enable PagingMaxRowsExpr (end pagination based on MaxRowCount) then you need to count records coming in each response. This expression extract all rows found under specified expression (e.g. $.orders[*] if all records found under orders node)."
                  expressionType="Notify"
                  name="PagingMaxRowsDataPathExpr"></property>
                <property
                  dataType="System.String"
                  description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                  expressionType="Notify"
                  name="PageNumberAttributeNameInUrl">page</property>
                <property
                  dataType="System.Int32"
                  description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                  expressionType="Notify"
                  name="MaxPageNumber">0</property>
                <property
                  dataType="System.String"
                  description="Rules to end pagination. You can use XML markup to include multiple rules. Here is an example of XML with multiple rules. This will stop pagination if any of these rule matches (Status Code, Size, Error Message)  &lt;ArrayOfPagingEndRule&gt;&lt;PagingEndRule&gt;&lt;Mode&gt;DetectBasedOnResponseStatusCode&lt;/Mode&gt;&lt;StatusCode&gt;401&lt;/StatusCode&gt;&lt;/PagingEndRule&gt;&lt;PagingEndRule&gt;&lt;Mode&gt;DetectBasedOnRecordCount&lt;/Mode&gt;&lt;/PagingEndRule&gt;&lt;PagingEndRule&gt;&lt;Mode&gt;DetectBasedOnResponseSize&lt;/Mode&gt;&lt;MinBytes&gt;3&lt;/MinBytes&gt;&lt;MaxBytes&gt;200&lt;/MaxBytes&gt;&lt;/PagingEndRule&gt;&lt;PagingEndRule&gt;&lt;Mode&gt;DetectBasedOnResponseErrorMessage&lt;/Mode&gt;&lt;ErrString&gt;key not found&lt;/ErrString&gt;&lt;/PagingEndRule&gt;&lt;/ArrayOfPagingEndRule&gt;"
                  expressionType="Notify"
                  name="PagingEndRules"></property>
                <property
                  dataType="System.String"
                  description="Variable name which will hold starting page number. This is ignored if you using parameter name from query string to indicate page number."
                  expressionType="Notify"
                  name="StartPageNumberVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                  expressionType="Notify"
                  name="PageNumberIncrement">1</property>
                <property
                  dataType="System.Int32"
                  description="Specified how you want detect last page."
                  expressionType="Notify"
                  name="PagingEndStrategy"
                  typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy">4</property>
                <property
                  dataType="System.Boolean"
                  description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                  expressionType="Notify"
                  name="LastPageWhenConditionEqualsTo">true</property>
                <property
                  dataType="System.Int32"
                  description="Minimum bytes expected from response."
                  expressionType="Notify"
                  name="ResponseMinBytes">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum bytes from response."
                  expressionType="Notify"
                  name="ResponseMaxBytes">3</property>
                <property
                  dataType="System.String"
                  description="Expected error message sub string from response."
                  expressionType="Notify"
                  name="ResponseErrorString">not found</property>
                <property
                  dataType="System.Int32"
                  description="Expected status code from response when page number you trying to access not found."
                  expressionType="Notify"
                  name="ResponseStatusCode">404</property>
                <property
                  dataType="System.Int32"
                  description="Maximum JSON records to fetch. Set this value to 0 for all records"
                  expressionType="Notify"
                  name="MaxRows">0</property>
                <property
                  dataType="System.String"
                  description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                  expressionType="Notify"
                  name="Filter"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Boolean"
                  description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                  expressionType="Notify"
                  name="IncludeParentColumns">true</property>
                <property
                  dataType="System.Boolean"
                  description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                  expressionType="Notify"
                  name="IncludeParentColumnsWhenChildMissing">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                  expressionType="Notify"
                  name="IncludeParentColumnsWithArrayType">false</property>
                <property
                  dataType="System.String"
                  description="Filter expression to extract value form parent"
                  expressionType="Notify"
                  name="FilterForParentColumnsWithArrayType"></property>
                <property
                  dataType="System.String"
                  description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                  expressionType="Notify"
                  name="ParentColumnPrefix">P_</property>
                <property
                  dataType="System.Boolean"
                  description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                  expressionType="Notify"
                  name="ThrowErrorIfPropertyMissing">false</property>
                <property
                  dataType="System.Int32"
                  description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                  expressionType="Notify"
                  name="MaxLevelsToScan">0</property>
                <property
                  dataType="System.String"
                  description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                  expressionType="Notify"
                  name="ExcludedProperties"></property>
                <property
                  dataType="System.String"
                  description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                  expressionType="Notify"
                  name="LevelSeparator">_</property>
                <property
                  dataType="System.Boolean"
                  description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                  expressionType="Notify"
                  name="EnableArrayFlattening">false</property>
                <property
                  dataType="System.Int32"
                  description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                  expressionType="Notify"
                  name="MaxArrayItemsToFlatten">10</property>
                <property
                  dataType="System.Int32"
                  description="Compression format for source file (e.g. gzip, zip)"
                  expressionType="Notify"
                  name="FileCompressionType"
                  typeConverter="ZappySys.Common.FileCompressionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                  expressionType="Notify"
                  name="ArrayTransformationType"
                  typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                <property
                  dataType="System.String"
                  description="Filter expression to use to extract column names for array transformation."
                  expressionType="Notify"
                  name="ArrayTransColumnNameFilter"></property>
                <property
                  dataType="System.String"
                  description="Filter expression for row values (Not applicable for simple array transformation)."
                  expressionType="Notify"
                  name="ArrayTransRowValueFilter"></property>
                <property
                  dataType="System.Boolean"
                  description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } ). If you selected Column less array or JSON Lines option then this property means Column Names coming from First Line of array."
                  expressionType="Notify"
                  name="ArrayTransEnableCustomColumns">false</property>
                <property
                  dataType="System.String"
                  description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                  expressionType="Notify"
                  name="ArrayTransCustomColumns"></property>
                <property
                  dataType="System.String"
                  description="Specifies how custom date formatted strings are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateFormatString"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateParseHandling"
                  typeConverter="ZappySys.Common.DateParseHandling">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how decimal values are parsed when reading JSON. Change this setting to Decimal if you like to have large precision / scale."
                  expressionType="Notify"
                  name="FloatParseHandling"
                  typeConverter="ZappySys.Common.FloatParseHandling">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indent JSON output so its easy to read."
                  expressionType="Notify"
                  name="IndentOutput">false</property>
                <property
                  dataType="System.Boolean"
                  description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                  expressionType="Notify"
                  name="OutputRawDocument">true</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                  expressionType="Notify"
                  name="OutputFilePath">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                  expressionType="Notify"
                  name="OutputFileName">true</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to true if you want to move processed file to archive folder."
                  expressionType="Notify"
                  name="EnableArchiveFile">false</property>
                <property
                  dataType="System.String"
                  description="Folder path where you want to move processed file."
                  expressionType="Notify"
                  name="ArchiveFolderPath"></property>
                <property
                  dataType="System.Boolean"
                  description="Folder path where you want to move processed file."
                  expressionType="Notify"
                  name="OverwriteFileInArchiveFolder">false</property>
                <property
                  dataType="System.String"
                  description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                  expressionType="Notify"
                  name="ArchiveFileNamingConvention"></property>
                <property
                  dataType="System.Boolean"
                  description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                  expressionType="Notify"
                  name="EnablePivot">false</property>
                <property
                  dataType="System.Boolean"
                  description="When this option is checked, system allows to parse large number (Higher than Int64) in JSON document (i.e. { id: 76000009353950433247780 } ). If you do not turn on this option then it may throw error if large number is encountered. This option is SLOW because it has to perform additional checks in order to avoid Large number overflow error so do not turn on unless you getting Large number error."
                  expressionType="Notify"
                  name="EnableBigNumberHandling">false</property>
                <property
                  dataType="System.Int32"
                  description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                  expressionType="Notify"
                  name="MetaDataScanMode"
                  typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                <property
                  dataType="System.Int32"
                  description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                  expressionType="Notify"
                  name="MetaDataCustomLength">1000</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.JsonSource</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Get Services\JSON Source (Services).Outputs[JsonSourceOutput]"
                  errorOrTruncationOperation="Error"
                  errorRowDisposition="FailComponent"
                  name="JsonSourceOutput"
                  truncationRowDisposition="FailComponent">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Services\JSON Source (Services).Outputs[JsonSourceOutput].Columns[__DOCUMENT__]"
                      dataType="nText"
                      externalMetadataColumnId="Package\Get Services\JSON Source (Services).Outputs[JsonSourceOutput].ExternalColumns[__DOCUMENT__]"
                      lineageId="Package\Get Services\JSON Source (Services).Outputs[JsonSourceOutput].Columns[__DOCUMENT__]"
                      name="__DOCUMENT__" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Services\JSON Source (Services).Outputs[JsonSourceOutput].ExternalColumns[__DOCUMENT__]"
                      dataType="nText"
                      name="__DOCUMENT__" />
                    <externalMetadataColumn
                      refId="Package\Get Services\JSON Source (Services).Outputs[JsonSourceOutput].ExternalColumns[__FileName]"
                      dataType="wstr"
                      length="600"
                      name="__FileName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get Services\JSON Source (Services).Outputs[JsonSource Error Output]"
                  isErrorOut="true"
                  name="JsonSource Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Services\JSON Source (Services).Outputs[JsonSource Error Output].Columns[__DOCUMENT__]"
                      dataType="nText"
                      lineageId="Package\Get Services\JSON Source (Services).Outputs[JsonSource Error Output].Columns[__DOCUMENT__]"
                      name="__DOCUMENT__" />
                    <outputColumn
                      refId="Package\Get Services\JSON Source (Services).Outputs[JsonSource Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Services\JSON Source (Services).Outputs[JsonSource Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Services\JSON Source (Services).Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Services\JSON Source (Services).Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Get Services\JSON Source (Services).Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                      codePage="1252"
                      dataType="str"
                      length="128"
                      lineageId="Package\Get Services\JSON Source (Services).Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                      name="ErrorColumnName" />
                    <outputColumn
                      refId="Package\Get Services\JSON Source (Services).Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="1024"
                      lineageId="Package\Get Services\JSON Source (Services).Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Services\Multicast"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Get Services\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Services\Multicast.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Get Services\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Services\Multicast.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Get Services\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Services\Multicast.Outputs[Multicast Output 3]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Get Services\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Services\Multicast.Outputs[Multicast Output 4]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 4"
                  synchronousInputId="Package\Get Services\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Services\Multicast.Outputs[Multicast Output 5]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 5"
                  synchronousInputId="Package\Get Services\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Services\Multicast.Outputs[Multicast Output 6]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 6"
                  synchronousInputId="Package\Get Services\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Services\Multicast.Outputs[Multicast Output 7]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 7"
                  synchronousInputId="Package\Get Services\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Services\Parse SRV_Hazmats"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
              name="Parse SRV_Hazmats"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any numeric data types"
                  expressionType="Notify"
                  name="TreatBlankNumberAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for bool data types"
                  expressionType="Notify"
                  name="TreatBlankBoolAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any date/time data types"
                  expressionType="Notify"
                  name="TreatBlankDateAsNull">true</property>
                <property
                  dataType="System.Int32"
                  description="Encoding of source file"
                  expressionType="Notify"
                  name="Encoding"
                  typeConverter="ZappySys.Common.EncodingType">0</property>
                <property
                  dataType="System.String"
                  description="Character set for text (e.g. windows-1250 )"
                  expressionType="Notify"
                  name="CharacterSet"></property>
                <property
                  dataType="System.String"
                  description="Sample JSON data used to parse output columns."
                  expressionType="Notify"
                  name="SampleData"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
  "results": [
    {
      "id": 22,
      "created_at": "2021-03-17T14:18:28Z",
      "updated_at": "2021-03-17T14:18:29Z",
      "title": "Test Service",
      "completed": false,
      "category_id": null,
      "canned_job_id": null,
      "comment": "No comment",
      "completed_at": null,
      "last_completed_at": null,
      "labor_rate_cents": 10000,
      "repair_order_id": 77,
      "labors": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:28Z",
          "updated_at": "2021-03-17T14:18:28Z",
          "name": "Test labor 8",
          "technician_id": null,
          "taxable": true,
          "hours": 1.0
        }
      ],
      "parts": [
        {
          "id": 17,
          "created_at": "2021-03-17T14:18:28Z",
          "updated_at": "2021-03-17T14:18:28Z",
          "brand": "Acme19",
          "description": "trademark widget",
          "number": "acme-19",
          "quoted_price_cents": 100,
          "cost_cents": 50,
          "part_inventory_id": 21,
          "taxable": true,
          "quantity": 1.0
        }
      ],
      "hazmats": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:28Z",
          "updated_at": "2021-03-17T14:18:28Z",
          "name": "Test hazmat fee 8",
          "fee_cents": 25,
          "taxable": true,
          "quantity": 1.0
        }
      ],
      "sublets": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:29Z",
          "updated_at": "2021-03-17T14:18:29Z",
          "name": "Test sublet 8",
          "price_cents": 50,
          "cost_cents": null,
          "provider": "",
          "invoice_number": "1111",
          "description": null,
          "taxable": true,
          "vendor_id": null,
          "invoice_date": null
        }
      ],
      "inspections": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:29Z",
          "updated_at": "2021-03-17T14:18:29Z",
          "name": "Test inspection 8",
          "state": "unchecked",
          "detail": "Specifics about the test inspection"
        }
      ]
    }
  ],
  "limit": 1,
  "limited": false,
  "total_count": 1,
  "current_page": 1,
  "total_pages": 1
}</property>
                <property
                  dataType="System.Boolean"
                  description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                  expressionType="Notify"
                  name="OutputAllUpstreamColumns">false</property>
                <property
                  dataType="System.Int32"
                  description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                  expressionType="Notify"
                  name="EmptyInputProcessingMode"
                  typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                <property
                  dataType="System.String"
                  description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                  expressionType="Notify"
                  name="TreatEmptyInputAs">{ }</property>
                <property
                  dataType="System.Int32"
                  description="Maximum JSON records to fetch. Set this value to 0 for all records"
                  expressionType="Notify"
                  name="MaxRows">0</property>
                <property
                  dataType="System.String"
                  description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                  expressionType="Notify"
                  name="Filter"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.results[*].hazmats[*]</property>
                <property
                  dataType="System.Boolean"
                  description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                  expressionType="Notify"
                  name="IncludeParentColumns">true</property>
                <property
                  dataType="System.Boolean"
                  description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                  expressionType="Notify"
                  name="IncludeParentColumnsWhenChildMissing">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                  expressionType="Notify"
                  name="IncludeParentColumnsWithArrayType">false</property>
                <property
                  dataType="System.String"
                  description="Filter expression to extract value form parent"
                  expressionType="Notify"
                  name="FilterForParentColumnsWithArrayType"></property>
                <property
                  dataType="System.String"
                  description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                  expressionType="Notify"
                  name="ParentColumnPrefix">P_</property>
                <property
                  dataType="System.Boolean"
                  description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                  expressionType="Notify"
                  name="ThrowErrorIfPropertyMissing">false</property>
                <property
                  dataType="System.Int32"
                  description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                  expressionType="Notify"
                  name="MaxLevelsToScan">0</property>
                <property
                  dataType="System.String"
                  description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                  expressionType="Notify"
                  name="ExcludedProperties"></property>
                <property
                  dataType="System.String"
                  description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                  expressionType="Notify"
                  name="LevelSeparator">_</property>
                <property
                  dataType="System.Boolean"
                  description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                  expressionType="Notify"
                  name="EnableArrayFlattening">false</property>
                <property
                  dataType="System.Int32"
                  description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                  expressionType="Notify"
                  name="MaxArrayItemsToFlatten">10</property>
                <property
                  dataType="System.String"
                  description="Specifies how custom date formatted strings are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateFormatString"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateParseHandling"
                  typeConverter="ZappySys.Common.DateParseHandling">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how decimal values are parsed when reading JSON. Change this setting to Decimal if you like to have large precision / scale."
                  expressionType="Notify"
                  name="FloatParseHandling"
                  typeConverter="ZappySys.Common.FloatParseHandling">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indent JSON output so its easy to read."
                  expressionType="Notify"
                  name="IndentOutput">false</property>
                <property
                  dataType="System.Boolean"
                  description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                  expressionType="Notify"
                  name="OutputRawDocument">false</property>
                <property
                  dataType="System.Boolean"
                  description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                  expressionType="Notify"
                  name="EnablePivot">false</property>
                <property
                  dataType="System.Int32"
                  description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                  expressionType="Notify"
                  name="ArrayTransformationType"
                  typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                <property
                  dataType="System.String"
                  description="Filter expression to use to extract column names for array transformation."
                  expressionType="Notify"
                  name="ArrayTransColumnNameFilter"></property>
                <property
                  dataType="System.String"
                  description="Filter expression for row values (Not applicable for simple array transformation)."
                  expressionType="Notify"
                  name="ArrayTransRowValueFilter"></property>
                <property
                  dataType="System.Boolean"
                  description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } ). If you selected Column less array or JSON Lines option then this property means Column Names coming from First Line of array."
                  expressionType="Notify"
                  name="ArrayTransEnableCustomColumns">false</property>
                <property
                  dataType="System.String"
                  description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                  expressionType="Notify"
                  name="ArrayTransCustomColumns"></property>
                <property
                  dataType="System.Int32"
                  description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                  expressionType="Notify"
                  name="MetaDataScanMode"
                  typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                <property
                  dataType="System.Int32"
                  description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                  expressionType="Notify"
                  name="MetaDataCustomLength">1000</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                <property
                  dataType="System.Boolean"
                  name="EnableBigNumberHandling">false</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Services\Parse SRV_Hazmats.Inputs[JsonParserTransformInput]"
                  errorRowDisposition="FailComponent"
                  name="JsonParserTransformInput"
                  truncationRowDisposition="FailComponent">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Inputs[JsonParserTransformInput].Columns[__DOCUMENT__]"
                      cachedDataType="nText"
                      cachedName="__DOCUMENT__"
                      lineageId="Package\Get Services\JSON Source (Services).Outputs[JsonSourceOutput].Columns[__DOCUMENT__]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True" />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput]"
                  errorOrTruncationOperation="Error"
                  errorRowDisposition="FailComponent"
                  name="JsonParserTransformOutput"
                  truncationRowDisposition="FailComponent">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[P_results_id]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_id]"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[P_results_id]"
                      name="P_results_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[id]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[id]"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[created_at]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[created_at]"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[created_at]"
                      name="created_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[updated_at]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[updated_at]"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[updated_at]"
                      name="updated_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[name]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[name]"
                      length="88"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[name]"
                      name="name" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[fee_cents]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[fee_cents]"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[fee_cents]"
                      name="fee_cents" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[taxable]"
                      dataType="bool"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[taxable]"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[taxable]"
                      name="taxable" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[quantity]"
                      dataType="r8"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[quantity]"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[quantity]"
                      name="quantity" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_id]"
                      dataType="i8"
                      name="P_results_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_created_at]"
                      dataType="wstr"
                      length="80"
                      name="P_results_created_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_updated_at]"
                      dataType="wstr"
                      length="80"
                      name="P_results_updated_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_title]"
                      dataType="wstr"
                      length="48"
                      name="P_results_title" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_completed]"
                      dataType="bool"
                      name="P_results_completed" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_category_id]"
                      dataType="wstr"
                      length="1020"
                      name="P_results_category_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_canned_job_id]"
                      dataType="wstr"
                      length="1020"
                      name="P_results_canned_job_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_comment]"
                      dataType="wstr"
                      length="40"
                      name="P_results_comment" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_completed_at]"
                      dataType="wstr"
                      length="1020"
                      name="P_results_completed_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_last_completed_at]"
                      dataType="wstr"
                      length="1020"
                      name="P_results_last_completed_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_labor_rate_cents]"
                      dataType="i8"
                      name="P_results_labor_rate_cents" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_repair_order_id]"
                      dataType="i8"
                      name="P_results_repair_order_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[P_limit]"
                      dataType="i8"
                      name="P_limit" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[P_limited]"
                      dataType="bool"
                      name="P_limited" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[P_total_count]"
                      dataType="i8"
                      name="P_total_count" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[P_current_page]"
                      dataType="i8"
                      name="P_current_page" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[P_total_pages]"
                      dataType="i8"
                      name="P_total_pages" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[id]"
                      dataType="i8"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[created_at]"
                      dataType="wstr"
                      length="80"
                      name="created_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[updated_at]"
                      dataType="wstr"
                      length="80"
                      name="updated_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[name]"
                      dataType="wstr"
                      length="68"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[fee_cents]"
                      dataType="i8"
                      name="fee_cents" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[taxable]"
                      dataType="bool"
                      name="taxable" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].ExternalColumns[quantity]"
                      dataType="r8"
                      name="quantity" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output]"
                  isErrorOut="true"
                  name="JsonParserTransform Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[P_results_id]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[P_results_id]"
                      name="P_results_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[id]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[created_at]"
                      dataType="wstr"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[created_at]"
                      name="created_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[updated_at]"
                      dataType="wstr"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[updated_at]"
                      name="updated_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[name]"
                      dataType="wstr"
                      length="88"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[name]"
                      name="name" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[fee_cents]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[fee_cents]"
                      name="fee_cents" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[taxable]"
                      dataType="bool"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[taxable]"
                      name="taxable" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[quantity]"
                      dataType="r8"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[quantity]"
                      name="quantity" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                      codePage="1252"
                      dataType="str"
                      length="128"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                      name="ErrorColumnName" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="1024"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                      dataType="nText"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                      name="ErrorRawData" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Services\Parse SRV_Inspections"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
              name="Parse SRV_Inspections"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any numeric data types"
                  expressionType="Notify"
                  name="TreatBlankNumberAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for bool data types"
                  expressionType="Notify"
                  name="TreatBlankBoolAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any date/time data types"
                  expressionType="Notify"
                  name="TreatBlankDateAsNull">true</property>
                <property
                  dataType="System.Int32"
                  description="Encoding of source file"
                  expressionType="Notify"
                  name="Encoding"
                  typeConverter="ZappySys.Common.EncodingType">0</property>
                <property
                  dataType="System.String"
                  description="Character set for text (e.g. windows-1250 )"
                  expressionType="Notify"
                  name="CharacterSet"></property>
                <property
                  dataType="System.String"
                  description="Sample JSON data used to parse output columns."
                  expressionType="Notify"
                  name="SampleData"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
  "results": [
    {
      "id": 22,
      "created_at": "2021-03-17T14:18:28Z",
      "updated_at": "2021-03-17T14:18:29Z",
      "title": "Test Service",
      "completed": false,
      "category_id": null,
      "canned_job_id": null,
      "comment": "No comment",
      "completed_at": null,
      "last_completed_at": null,
      "labor_rate_cents": 10000,
      "repair_order_id": 77,
      "labors": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:28Z",
          "updated_at": "2021-03-17T14:18:28Z",
          "name": "Test labor 8",
          "technician_id": null,
          "taxable": true,
          "hours": 1.0
        }
      ],
      "parts": [
        {
          "id": 17,
          "created_at": "2021-03-17T14:18:28Z",
          "updated_at": "2021-03-17T14:18:28Z",
          "brand": "Acme19",
          "description": "trademark widget",
          "number": "acme-19",
          "quoted_price_cents": 100,
          "cost_cents": 50,
          "part_inventory_id": 21,
          "taxable": true,
          "quantity": 1.0
        }
      ],
      "hazmats": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:28Z",
          "updated_at": "2021-03-17T14:18:28Z",
          "name": "Test hazmat fee 8",
          "fee_cents": 25,
          "taxable": true,
          "quantity": 1.0
        }
      ],
      "sublets": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:29Z",
          "updated_at": "2021-03-17T14:18:29Z",
          "name": "Test sublet 8",
          "price_cents": 50,
          "cost_cents": null,
          "provider": "",
          "invoice_number": "1111",
          "description": null,
          "taxable": true,
          "vendor_id": null,
          "invoice_date": null
        }
      ],
      "inspections": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:29Z",
          "updated_at": "2021-03-17T14:18:29Z",
          "name": "Test inspection 8",
          "state": "unchecked",
          "detail": "Specifics about the test inspection"
        }
      ]
    }
  ],
  "limit": 1,
  "limited": false,
  "total_count": 1,
  "current_page": 1,
  "total_pages": 1
}</property>
                <property
                  dataType="System.Boolean"
                  description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                  expressionType="Notify"
                  name="OutputAllUpstreamColumns">false</property>
                <property
                  dataType="System.Int32"
                  description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                  expressionType="Notify"
                  name="EmptyInputProcessingMode"
                  typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                <property
                  dataType="System.String"
                  description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                  expressionType="Notify"
                  name="TreatEmptyInputAs">{ }</property>
                <property
                  dataType="System.Int32"
                  description="Maximum JSON records to fetch. Set this value to 0 for all records"
                  expressionType="Notify"
                  name="MaxRows">0</property>
                <property
                  dataType="System.String"
                  description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                  expressionType="Notify"
                  name="Filter"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.results[*].inspections[*]</property>
                <property
                  dataType="System.Boolean"
                  description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                  expressionType="Notify"
                  name="IncludeParentColumns">true</property>
                <property
                  dataType="System.Boolean"
                  description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                  expressionType="Notify"
                  name="IncludeParentColumnsWhenChildMissing">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                  expressionType="Notify"
                  name="IncludeParentColumnsWithArrayType">false</property>
                <property
                  dataType="System.String"
                  description="Filter expression to extract value form parent"
                  expressionType="Notify"
                  name="FilterForParentColumnsWithArrayType"></property>
                <property
                  dataType="System.String"
                  description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                  expressionType="Notify"
                  name="ParentColumnPrefix">P_</property>
                <property
                  dataType="System.Boolean"
                  description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                  expressionType="Notify"
                  name="ThrowErrorIfPropertyMissing">false</property>
                <property
                  dataType="System.Int32"
                  description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                  expressionType="Notify"
                  name="MaxLevelsToScan">0</property>
                <property
                  dataType="System.String"
                  description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                  expressionType="Notify"
                  name="ExcludedProperties"></property>
                <property
                  dataType="System.String"
                  description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                  expressionType="Notify"
                  name="LevelSeparator">_</property>
                <property
                  dataType="System.Boolean"
                  description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                  expressionType="Notify"
                  name="EnableArrayFlattening">false</property>
                <property
                  dataType="System.Int32"
                  description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                  expressionType="Notify"
                  name="MaxArrayItemsToFlatten">10</property>
                <property
                  dataType="System.String"
                  description="Specifies how custom date formatted strings are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateFormatString"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateParseHandling"
                  typeConverter="ZappySys.Common.DateParseHandling">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how decimal values are parsed when reading JSON. Change this setting to Decimal if you like to have large precision / scale."
                  expressionType="Notify"
                  name="FloatParseHandling"
                  typeConverter="ZappySys.Common.FloatParseHandling">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indent JSON output so its easy to read."
                  expressionType="Notify"
                  name="IndentOutput">false</property>
                <property
                  dataType="System.Boolean"
                  description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                  expressionType="Notify"
                  name="OutputRawDocument">false</property>
                <property
                  dataType="System.Boolean"
                  description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                  expressionType="Notify"
                  name="EnablePivot">false</property>
                <property
                  dataType="System.Int32"
                  description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                  expressionType="Notify"
                  name="ArrayTransformationType"
                  typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                <property
                  dataType="System.String"
                  description="Filter expression to use to extract column names for array transformation."
                  expressionType="Notify"
                  name="ArrayTransColumnNameFilter"></property>
                <property
                  dataType="System.String"
                  description="Filter expression for row values (Not applicable for simple array transformation)."
                  expressionType="Notify"
                  name="ArrayTransRowValueFilter"></property>
                <property
                  dataType="System.Boolean"
                  description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } ). If you selected Column less array or JSON Lines option then this property means Column Names coming from First Line of array."
                  expressionType="Notify"
                  name="ArrayTransEnableCustomColumns">false</property>
                <property
                  dataType="System.String"
                  description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                  expressionType="Notify"
                  name="ArrayTransCustomColumns"></property>
                <property
                  dataType="System.Int32"
                  description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                  expressionType="Notify"
                  name="MetaDataScanMode"
                  typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                <property
                  dataType="System.Int32"
                  description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                  expressionType="Notify"
                  name="MetaDataCustomLength">1000</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                <property
                  dataType="System.Boolean"
                  name="EnableBigNumberHandling">false</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Services\Parse SRV_Inspections.Inputs[JsonParserTransformInput]"
                  errorRowDisposition="FailComponent"
                  name="JsonParserTransformInput"
                  truncationRowDisposition="FailComponent">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Inputs[JsonParserTransformInput].Columns[__DOCUMENT__]"
                      cachedDataType="nText"
                      cachedName="__DOCUMENT__"
                      lineageId="Package\Get Services\JSON Source (Services).Outputs[JsonSourceOutput].Columns[__DOCUMENT__]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True" />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput]"
                  errorOrTruncationOperation="Error"
                  errorRowDisposition="FailComponent"
                  name="JsonParserTransformOutput"
                  truncationRowDisposition="FailComponent">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[P_results_id]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_id]"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[P_results_id]"
                      name="P_results_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[id]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[id]"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[created_at]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[created_at]"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[created_at]"
                      name="created_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[updated_at]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[updated_at]"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[updated_at]"
                      name="updated_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[name]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[name]"
                      length="700"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[name]"
                      name="name" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[state]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[state]"
                      length="36"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[state]"
                      name="state" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[detail]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[detail]"
                      length="1020"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[detail]"
                      name="detail" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_id]"
                      dataType="i8"
                      name="P_results_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_created_at]"
                      dataType="wstr"
                      length="80"
                      name="P_results_created_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_updated_at]"
                      dataType="wstr"
                      length="80"
                      name="P_results_updated_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_title]"
                      dataType="wstr"
                      length="48"
                      name="P_results_title" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_completed]"
                      dataType="bool"
                      name="P_results_completed" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_category_id]"
                      dataType="wstr"
                      length="1020"
                      name="P_results_category_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_canned_job_id]"
                      dataType="wstr"
                      length="1020"
                      name="P_results_canned_job_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_comment]"
                      dataType="wstr"
                      length="40"
                      name="P_results_comment" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_completed_at]"
                      dataType="wstr"
                      length="1020"
                      name="P_results_completed_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_last_completed_at]"
                      dataType="wstr"
                      length="1020"
                      name="P_results_last_completed_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_labor_rate_cents]"
                      dataType="i8"
                      name="P_results_labor_rate_cents" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_repair_order_id]"
                      dataType="i8"
                      name="P_results_repair_order_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[P_limit]"
                      dataType="i8"
                      name="P_limit" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[P_limited]"
                      dataType="bool"
                      name="P_limited" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[P_total_count]"
                      dataType="i8"
                      name="P_total_count" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[P_current_page]"
                      dataType="i8"
                      name="P_current_page" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[P_total_pages]"
                      dataType="i8"
                      name="P_total_pages" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[id]"
                      dataType="i8"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[created_at]"
                      dataType="wstr"
                      length="80"
                      name="created_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[updated_at]"
                      dataType="wstr"
                      length="80"
                      name="updated_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[name]"
                      dataType="wstr"
                      length="68"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[state]"
                      dataType="wstr"
                      length="36"
                      name="state" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].ExternalColumns[detail]"
                      dataType="wstr"
                      length="140"
                      name="detail" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output]"
                  isErrorOut="true"
                  name="JsonParserTransform Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[P_results_id]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[P_results_id]"
                      name="P_results_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[id]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[created_at]"
                      dataType="wstr"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[created_at]"
                      name="created_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[updated_at]"
                      dataType="wstr"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[updated_at]"
                      name="updated_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[name]"
                      dataType="wstr"
                      length="700"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[name]"
                      name="name" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[state]"
                      dataType="wstr"
                      length="36"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[state]"
                      name="state" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[detail]"
                      dataType="wstr"
                      length="1020"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[detail]"
                      name="detail" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                      codePage="1252"
                      dataType="str"
                      length="128"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                      name="ErrorColumnName" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="1024"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                      dataType="nText"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                      name="ErrorRawData" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Services\Parse SRV_Labors"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
              name="Parse SRV_Labors"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any numeric data types"
                  expressionType="Notify"
                  name="TreatBlankNumberAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for bool data types"
                  expressionType="Notify"
                  name="TreatBlankBoolAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any date/time data types"
                  expressionType="Notify"
                  name="TreatBlankDateAsNull">true</property>
                <property
                  dataType="System.Int32"
                  description="Encoding of source file"
                  expressionType="Notify"
                  name="Encoding"
                  typeConverter="ZappySys.Common.EncodingType">0</property>
                <property
                  dataType="System.String"
                  description="Character set for text (e.g. windows-1250 )"
                  expressionType="Notify"
                  name="CharacterSet"></property>
                <property
                  dataType="System.String"
                  description="Sample JSON data used to parse output columns."
                  expressionType="Notify"
                  name="SampleData"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
  "results": [
    {
      "id": 22,
      "created_at": "2021-03-17T14:18:28Z",
      "updated_at": "2021-03-17T14:18:29Z",
      "title": "Test Service",
      "completed": false,
      "category_id": null,
      "canned_job_id": null,
      "comment": "No comment",
      "completed_at": null,
      "last_completed_at": null,
      "labor_rate_cents": 10000,
      "repair_order_id": 77,
      "labors": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:28Z",
          "updated_at": "2021-03-17T14:18:28Z",
          "name": "Test labor 8",
          "technician_id": null,
          "taxable": true,
          "hours": 1.0
        }
      ],
      "parts": [
        {
          "id": 17,
          "created_at": "2021-03-17T14:18:28Z",
          "updated_at": "2021-03-17T14:18:28Z",
          "brand": "Acme19",
          "description": "trademark widget",
          "number": "acme-19",
          "quoted_price_cents": 100,
          "cost_cents": 50,
          "part_inventory_id": 21,
          "taxable": true,
          "quantity": 1.0
        }
      ],
      "hazmats": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:28Z",
          "updated_at": "2021-03-17T14:18:28Z",
          "name": "Test hazmat fee 8",
          "fee_cents": 25,
          "taxable": true,
          "quantity": 1.0
        }
      ],
      "sublets": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:29Z",
          "updated_at": "2021-03-17T14:18:29Z",
          "name": "Test sublet 8",
          "price_cents": 50,
          "cost_cents": null,
          "provider": "",
          "invoice_number": "1111",
          "description": null,
          "taxable": true,
          "vendor_id": null,
          "invoice_date": null
        }
      ],
      "inspections": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:29Z",
          "updated_at": "2021-03-17T14:18:29Z",
          "name": "Test inspection 8",
          "state": "unchecked",
          "detail": "Specifics about the test inspection"
        }
      ]
    }
  ],
  "limit": 1,
  "limited": false,
  "total_count": 1,
  "current_page": 1,
  "total_pages": 1
}</property>
                <property
                  dataType="System.Boolean"
                  description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                  expressionType="Notify"
                  name="OutputAllUpstreamColumns">false</property>
                <property
                  dataType="System.Int32"
                  description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                  expressionType="Notify"
                  name="EmptyInputProcessingMode"
                  typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                <property
                  dataType="System.String"
                  description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                  expressionType="Notify"
                  name="TreatEmptyInputAs">{ }</property>
                <property
                  dataType="System.Int32"
                  description="Maximum JSON records to fetch. Set this value to 0 for all records"
                  expressionType="Notify"
                  name="MaxRows">0</property>
                <property
                  dataType="System.String"
                  description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                  expressionType="Notify"
                  name="Filter"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.results[*].labors[*]</property>
                <property
                  dataType="System.Boolean"
                  description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                  expressionType="Notify"
                  name="IncludeParentColumns">true</property>
                <property
                  dataType="System.Boolean"
                  description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                  expressionType="Notify"
                  name="IncludeParentColumnsWhenChildMissing">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                  expressionType="Notify"
                  name="IncludeParentColumnsWithArrayType">false</property>
                <property
                  dataType="System.String"
                  description="Filter expression to extract value form parent"
                  expressionType="Notify"
                  name="FilterForParentColumnsWithArrayType"></property>
                <property
                  dataType="System.String"
                  description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                  expressionType="Notify"
                  name="ParentColumnPrefix">P_</property>
                <property
                  dataType="System.Boolean"
                  description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                  expressionType="Notify"
                  name="ThrowErrorIfPropertyMissing">false</property>
                <property
                  dataType="System.Int32"
                  description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                  expressionType="Notify"
                  name="MaxLevelsToScan">0</property>
                <property
                  dataType="System.String"
                  description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                  expressionType="Notify"
                  name="ExcludedProperties"></property>
                <property
                  dataType="System.String"
                  description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                  expressionType="Notify"
                  name="LevelSeparator">_</property>
                <property
                  dataType="System.Boolean"
                  description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                  expressionType="Notify"
                  name="EnableArrayFlattening">false</property>
                <property
                  dataType="System.Int32"
                  description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                  expressionType="Notify"
                  name="MaxArrayItemsToFlatten">10</property>
                <property
                  dataType="System.String"
                  description="Specifies how custom date formatted strings are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateFormatString"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateParseHandling"
                  typeConverter="ZappySys.Common.DateParseHandling">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how decimal values are parsed when reading JSON. Change this setting to Decimal if you like to have large precision / scale."
                  expressionType="Notify"
                  name="FloatParseHandling"
                  typeConverter="ZappySys.Common.FloatParseHandling">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indent JSON output so its easy to read."
                  expressionType="Notify"
                  name="IndentOutput">false</property>
                <property
                  dataType="System.Boolean"
                  description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                  expressionType="Notify"
                  name="OutputRawDocument">false</property>
                <property
                  dataType="System.Boolean"
                  description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                  expressionType="Notify"
                  name="EnablePivot">false</property>
                <property
                  dataType="System.Int32"
                  description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                  expressionType="Notify"
                  name="ArrayTransformationType"
                  typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                <property
                  dataType="System.String"
                  description="Filter expression to use to extract column names for array transformation."
                  expressionType="Notify"
                  name="ArrayTransColumnNameFilter"></property>
                <property
                  dataType="System.String"
                  description="Filter expression for row values (Not applicable for simple array transformation)."
                  expressionType="Notify"
                  name="ArrayTransRowValueFilter"></property>
                <property
                  dataType="System.Boolean"
                  description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } ). If you selected Column less array or JSON Lines option then this property means Column Names coming from First Line of array."
                  expressionType="Notify"
                  name="ArrayTransEnableCustomColumns">false</property>
                <property
                  dataType="System.String"
                  description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                  expressionType="Notify"
                  name="ArrayTransCustomColumns"></property>
                <property
                  dataType="System.Int32"
                  description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                  expressionType="Notify"
                  name="MetaDataScanMode"
                  typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                <property
                  dataType="System.Int32"
                  description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                  expressionType="Notify"
                  name="MetaDataCustomLength">1000</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                <property
                  dataType="System.Boolean"
                  name="EnableBigNumberHandling">false</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Services\Parse SRV_Labors.Inputs[JsonParserTransformInput]"
                  errorRowDisposition="FailComponent"
                  name="JsonParserTransformInput"
                  truncationRowDisposition="FailComponent">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Inputs[JsonParserTransformInput].Columns[__DOCUMENT__]"
                      cachedDataType="nText"
                      cachedName="__DOCUMENT__"
                      lineageId="Package\Get Services\JSON Source (Services).Outputs[JsonSourceOutput].Columns[__DOCUMENT__]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True" />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput]"
                  errorOrTruncationOperation="Error"
                  errorRowDisposition="FailComponent"
                  name="JsonParserTransformOutput"
                  truncationRowDisposition="FailComponent">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[P_results_id]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_id]"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[P_results_id]"
                      name="P_results_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[id]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[id]"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[created_at]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[created_at]"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[created_at]"
                      name="created_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[updated_at]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[updated_at]"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[updated_at]"
                      name="updated_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[name]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[name]"
                      length="576"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[name]"
                      name="name" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[technician_id]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[technician_id]"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[technician_id]"
                      name="technician_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[taxable]"
                      dataType="bool"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[taxable]"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[taxable]"
                      name="taxable" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[hours]"
                      dataType="r8"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[hours]"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[hours]"
                      name="hours" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_id]"
                      dataType="i8"
                      name="P_results_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_created_at]"
                      dataType="wstr"
                      length="80"
                      name="P_results_created_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_updated_at]"
                      dataType="wstr"
                      length="80"
                      name="P_results_updated_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_title]"
                      dataType="wstr"
                      length="48"
                      name="P_results_title" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_completed]"
                      dataType="bool"
                      name="P_results_completed" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_category_id]"
                      dataType="wstr"
                      length="1020"
                      name="P_results_category_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_canned_job_id]"
                      dataType="wstr"
                      length="1020"
                      name="P_results_canned_job_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_comment]"
                      dataType="wstr"
                      length="40"
                      name="P_results_comment" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_completed_at]"
                      dataType="wstr"
                      length="1020"
                      name="P_results_completed_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_last_completed_at]"
                      dataType="wstr"
                      length="1020"
                      name="P_results_last_completed_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_labor_rate_cents]"
                      dataType="i8"
                      name="P_results_labor_rate_cents" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_repair_order_id]"
                      dataType="i8"
                      name="P_results_repair_order_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[P_limit]"
                      dataType="i8"
                      name="P_limit" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[P_limited]"
                      dataType="bool"
                      name="P_limited" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[P_total_count]"
                      dataType="i8"
                      name="P_total_count" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[P_current_page]"
                      dataType="i8"
                      name="P_current_page" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[P_total_pages]"
                      dataType="i8"
                      name="P_total_pages" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[id]"
                      dataType="i8"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[created_at]"
                      dataType="wstr"
                      length="80"
                      name="created_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[updated_at]"
                      dataType="wstr"
                      length="80"
                      name="updated_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[name]"
                      dataType="wstr"
                      length="48"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[technician_id]"
                      dataType="wstr"
                      length="1020"
                      name="technician_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[taxable]"
                      dataType="bool"
                      name="taxable" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].ExternalColumns[hours]"
                      dataType="r8"
                      name="hours" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output]"
                  isErrorOut="true"
                  name="JsonParserTransform Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[P_results_id]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[P_results_id]"
                      name="P_results_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[id]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[created_at]"
                      dataType="wstr"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[created_at]"
                      name="created_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[updated_at]"
                      dataType="wstr"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[updated_at]"
                      name="updated_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[name]"
                      dataType="wstr"
                      length="576"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[name]"
                      name="name" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[technician_id]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[technician_id]"
                      name="technician_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[taxable]"
                      dataType="bool"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[taxable]"
                      name="taxable" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[hours]"
                      dataType="r8"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[hours]"
                      name="hours" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                      codePage="1252"
                      dataType="str"
                      length="128"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                      name="ErrorColumnName" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="1024"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                      dataType="nText"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                      name="ErrorRawData" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Services\Parse SRV_Parts"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
              name="Parse SRV_Parts"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any numeric data types"
                  expressionType="Notify"
                  name="TreatBlankNumberAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for bool data types"
                  expressionType="Notify"
                  name="TreatBlankBoolAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any date/time data types"
                  expressionType="Notify"
                  name="TreatBlankDateAsNull">true</property>
                <property
                  dataType="System.Int32"
                  description="Encoding of source file"
                  expressionType="Notify"
                  name="Encoding"
                  typeConverter="ZappySys.Common.EncodingType">0</property>
                <property
                  dataType="System.String"
                  description="Character set for text (e.g. windows-1250 )"
                  expressionType="Notify"
                  name="CharacterSet"></property>
                <property
                  dataType="System.String"
                  description="Sample JSON data used to parse output columns."
                  expressionType="Notify"
                  name="SampleData"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
  "results": [
    {
      "id": 22,
      "created_at": "2021-03-17T14:18:28Z",
      "updated_at": "2021-03-17T14:18:29Z",
      "title": "Test Service",
      "completed": false,
      "category_id": null,
      "canned_job_id": null,
      "comment": "No comment",
      "completed_at": null,
      "last_completed_at": null,
      "labor_rate_cents": 10000,
      "repair_order_id": 77,
      "labors": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:28Z",
          "updated_at": "2021-03-17T14:18:28Z",
          "name": "Test labor 8",
          "technician_id": null,
          "taxable": true,
          "hours": 1.0
        }
      ],
      "parts": [
        {
          "id": 17,
          "created_at": "2021-03-17T14:18:28Z",
          "updated_at": "2021-03-17T14:18:28Z",
          "brand": "Acme19",
          "description": "trademark widget",
          "number": "acme-19",
          "quoted_price_cents": 100,
          "cost_cents": 50,
          "part_inventory_id": 21,
          "taxable": true,
          "quantity": 1.0
        }
      ],
      "hazmats": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:28Z",
          "updated_at": "2021-03-17T14:18:28Z",
          "name": "Test hazmat fee 8",
          "fee_cents": 25,
          "taxable": true,
          "quantity": 1.0
        }
      ],
      "sublets": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:29Z",
          "updated_at": "2021-03-17T14:18:29Z",
          "name": "Test sublet 8",
          "price_cents": 50,
          "cost_cents": null,
          "provider": "",
          "invoice_number": "1111",
          "description": null,
          "taxable": true,
          "vendor_id": null,
          "invoice_date": null
        }
      ],
      "inspections": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:29Z",
          "updated_at": "2021-03-17T14:18:29Z",
          "name": "Test inspection 8",
          "state": "unchecked",
          "detail": "Specifics about the test inspection"
        }
      ]
    }
  ],
  "limit": 1,
  "limited": false,
  "total_count": 1,
  "current_page": 1,
  "total_pages": 1
}</property>
                <property
                  dataType="System.Boolean"
                  description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                  expressionType="Notify"
                  name="OutputAllUpstreamColumns">false</property>
                <property
                  dataType="System.Int32"
                  description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                  expressionType="Notify"
                  name="EmptyInputProcessingMode"
                  typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                <property
                  dataType="System.String"
                  description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                  expressionType="Notify"
                  name="TreatEmptyInputAs">{ }</property>
                <property
                  dataType="System.Int32"
                  description="Maximum JSON records to fetch. Set this value to 0 for all records"
                  expressionType="Notify"
                  name="MaxRows">0</property>
                <property
                  dataType="System.String"
                  description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                  expressionType="Notify"
                  name="Filter"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.results[*].parts[*]</property>
                <property
                  dataType="System.Boolean"
                  description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                  expressionType="Notify"
                  name="IncludeParentColumns">true</property>
                <property
                  dataType="System.Boolean"
                  description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                  expressionType="Notify"
                  name="IncludeParentColumnsWhenChildMissing">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                  expressionType="Notify"
                  name="IncludeParentColumnsWithArrayType">false</property>
                <property
                  dataType="System.String"
                  description="Filter expression to extract value form parent"
                  expressionType="Notify"
                  name="FilterForParentColumnsWithArrayType"></property>
                <property
                  dataType="System.String"
                  description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                  expressionType="Notify"
                  name="ParentColumnPrefix">P_</property>
                <property
                  dataType="System.Boolean"
                  description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                  expressionType="Notify"
                  name="ThrowErrorIfPropertyMissing">false</property>
                <property
                  dataType="System.Int32"
                  description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                  expressionType="Notify"
                  name="MaxLevelsToScan">0</property>
                <property
                  dataType="System.String"
                  description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                  expressionType="Notify"
                  name="ExcludedProperties"></property>
                <property
                  dataType="System.String"
                  description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                  expressionType="Notify"
                  name="LevelSeparator">_</property>
                <property
                  dataType="System.Boolean"
                  description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                  expressionType="Notify"
                  name="EnableArrayFlattening">false</property>
                <property
                  dataType="System.Int32"
                  description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                  expressionType="Notify"
                  name="MaxArrayItemsToFlatten">10</property>
                <property
                  dataType="System.String"
                  description="Specifies how custom date formatted strings are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateFormatString"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateParseHandling"
                  typeConverter="ZappySys.Common.DateParseHandling">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how decimal values are parsed when reading JSON. Change this setting to Decimal if you like to have large precision / scale."
                  expressionType="Notify"
                  name="FloatParseHandling"
                  typeConverter="ZappySys.Common.FloatParseHandling">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indent JSON output so its easy to read."
                  expressionType="Notify"
                  name="IndentOutput">false</property>
                <property
                  dataType="System.Boolean"
                  description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                  expressionType="Notify"
                  name="OutputRawDocument">false</property>
                <property
                  dataType="System.Boolean"
                  description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                  expressionType="Notify"
                  name="EnablePivot">false</property>
                <property
                  dataType="System.Int32"
                  description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                  expressionType="Notify"
                  name="ArrayTransformationType"
                  typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                <property
                  dataType="System.String"
                  description="Filter expression to use to extract column names for array transformation."
                  expressionType="Notify"
                  name="ArrayTransColumnNameFilter"></property>
                <property
                  dataType="System.String"
                  description="Filter expression for row values (Not applicable for simple array transformation)."
                  expressionType="Notify"
                  name="ArrayTransRowValueFilter"></property>
                <property
                  dataType="System.Boolean"
                  description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } ). If you selected Column less array or JSON Lines option then this property means Column Names coming from First Line of array."
                  expressionType="Notify"
                  name="ArrayTransEnableCustomColumns">false</property>
                <property
                  dataType="System.String"
                  description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                  expressionType="Notify"
                  name="ArrayTransCustomColumns"></property>
                <property
                  dataType="System.Int32"
                  description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                  expressionType="Notify"
                  name="MetaDataScanMode"
                  typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                <property
                  dataType="System.Int32"
                  description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                  expressionType="Notify"
                  name="MetaDataCustomLength">1000</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                <property
                  dataType="System.Boolean"
                  name="EnableBigNumberHandling">false</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Services\Parse SRV_Parts.Inputs[JsonParserTransformInput]"
                  errorRowDisposition="FailComponent"
                  name="JsonParserTransformInput"
                  truncationRowDisposition="FailComponent">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Inputs[JsonParserTransformInput].Columns[__DOCUMENT__]"
                      cachedDataType="nText"
                      cachedName="__DOCUMENT__"
                      lineageId="Package\Get Services\JSON Source (Services).Outputs[JsonSourceOutput].Columns[__DOCUMENT__]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True" />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput]"
                  errorOrTruncationOperation="Error"
                  errorRowDisposition="FailComponent"
                  name="JsonParserTransformOutput"
                  truncationRowDisposition="FailComponent">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[P_results_id]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_id]"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[P_results_id]"
                      name="P_results_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[id]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[id]"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[created_at]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[created_at]"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[created_at]"
                      name="created_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[updated_at]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[updated_at]"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[updated_at]"
                      name="updated_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[brand]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[brand]"
                      length="60"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[brand]"
                      name="brand" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[description]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[description]"
                      length="255"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[description]"
                      name="description" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[number]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[number]"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[number]"
                      name="number" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[quoted_price_cents]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[quoted_price_cents]"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[quoted_price_cents]"
                      name="quoted_price_cents" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[cost_cents]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[cost_cents]"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[cost_cents]"
                      name="cost_cents" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[part_inventory_id]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[part_inventory_id]"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[part_inventory_id]"
                      name="part_inventory_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[taxable]"
                      dataType="bool"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[taxable]"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[taxable]"
                      name="taxable" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[quantity]"
                      dataType="r8"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[quantity]"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[quantity]"
                      name="quantity" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_id]"
                      dataType="i8"
                      name="P_results_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_created_at]"
                      dataType="wstr"
                      length="80"
                      name="P_results_created_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_updated_at]"
                      dataType="wstr"
                      length="80"
                      name="P_results_updated_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_title]"
                      dataType="wstr"
                      length="48"
                      name="P_results_title" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_completed]"
                      dataType="bool"
                      name="P_results_completed" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_category_id]"
                      dataType="wstr"
                      length="1020"
                      name="P_results_category_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_canned_job_id]"
                      dataType="wstr"
                      length="1020"
                      name="P_results_canned_job_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_comment]"
                      dataType="wstr"
                      length="40"
                      name="P_results_comment" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_completed_at]"
                      dataType="wstr"
                      length="1020"
                      name="P_results_completed_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_last_completed_at]"
                      dataType="wstr"
                      length="1020"
                      name="P_results_last_completed_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_labor_rate_cents]"
                      dataType="i8"
                      name="P_results_labor_rate_cents" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_repair_order_id]"
                      dataType="i8"
                      name="P_results_repair_order_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[P_limit]"
                      dataType="i8"
                      name="P_limit" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[P_limited]"
                      dataType="bool"
                      name="P_limited" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[P_total_count]"
                      dataType="i8"
                      name="P_total_count" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[P_current_page]"
                      dataType="i8"
                      name="P_current_page" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[P_total_pages]"
                      dataType="i8"
                      name="P_total_pages" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[id]"
                      dataType="i8"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[created_at]"
                      dataType="wstr"
                      length="80"
                      name="created_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[updated_at]"
                      dataType="wstr"
                      length="80"
                      name="updated_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[brand]"
                      dataType="wstr"
                      length="24"
                      name="brand" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[description]"
                      dataType="wstr"
                      length="64"
                      name="description" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[number]"
                      dataType="wstr"
                      length="28"
                      name="number" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[quoted_price_cents]"
                      dataType="i8"
                      name="quoted_price_cents" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[cost_cents]"
                      dataType="i8"
                      name="cost_cents" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[part_inventory_id]"
                      dataType="i8"
                      name="part_inventory_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[taxable]"
                      dataType="bool"
                      name="taxable" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].ExternalColumns[quantity]"
                      dataType="r8"
                      name="quantity" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output]"
                  isErrorOut="true"
                  name="JsonParserTransform Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[P_results_id]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[P_results_id]"
                      name="P_results_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[id]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[created_at]"
                      dataType="wstr"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[created_at]"
                      name="created_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[updated_at]"
                      dataType="wstr"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[updated_at]"
                      name="updated_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[brand]"
                      dataType="wstr"
                      length="60"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[brand]"
                      name="brand" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[description]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[description]"
                      name="description" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[number]"
                      dataType="wstr"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[number]"
                      name="number" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[quoted_price_cents]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[quoted_price_cents]"
                      name="quoted_price_cents" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[cost_cents]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[cost_cents]"
                      name="cost_cents" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[part_inventory_id]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[part_inventory_id]"
                      name="part_inventory_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[taxable]"
                      dataType="bool"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[taxable]"
                      name="taxable" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[quantity]"
                      dataType="r8"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[quantity]"
                      name="quantity" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                      codePage="1252"
                      dataType="str"
                      length="128"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                      name="ErrorColumnName" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="1024"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                      dataType="nText"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                      name="ErrorRawData" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Services\Parse SRV_Services"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
              name="Parse SRV_Services"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any numeric data types"
                  expressionType="Notify"
                  name="TreatBlankNumberAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for bool data types"
                  expressionType="Notify"
                  name="TreatBlankBoolAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any date/time data types"
                  expressionType="Notify"
                  name="TreatBlankDateAsNull">true</property>
                <property
                  dataType="System.Int32"
                  description="Encoding of source file"
                  expressionType="Notify"
                  name="Encoding"
                  typeConverter="ZappySys.Common.EncodingType">0</property>
                <property
                  dataType="System.String"
                  description="Character set for text (e.g. windows-1250 )"
                  expressionType="Notify"
                  name="CharacterSet"></property>
                <property
                  dataType="System.String"
                  description="Sample JSON data used to parse output columns."
                  expressionType="Notify"
                  name="SampleData"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
  "results": [
    {
      "id": 22,
      "created_at": "2021-03-17T14:18:28Z",
      "updated_at": "2021-03-17T14:18:29Z",
      "title": "Test Service",
      "completed": false,
      "category_id": null,
      "canned_job_id": null,
      "comment": "No comment",
      "completed_at": null,
      "last_completed_at": null,
      "labor_rate_cents": 10000,
      "repair_order_id": 77,
      "labors": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:28Z",
          "updated_at": "2021-03-17T14:18:28Z",
          "name": "Test labor 8",
          "technician_id": null,
          "taxable": true,
          "hours": 1.0
        }
      ],
      "parts": [
        {
          "id": 17,
          "created_at": "2021-03-17T14:18:28Z",
          "updated_at": "2021-03-17T14:18:28Z",
          "brand": "Acme19",
          "description": "trademark widget",
          "number": "acme-19",
          "quoted_price_cents": 100,
          "cost_cents": 50,
          "part_inventory_id": 21,
          "taxable": true,
          "quantity": 1.0
        }
      ],
      "hazmats": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:28Z",
          "updated_at": "2021-03-17T14:18:28Z",
          "name": "Test hazmat fee 8",
          "fee_cents": 25,
          "taxable": true,
          "quantity": 1.0
        }
      ],
      "sublets": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:29Z",
          "updated_at": "2021-03-17T14:18:29Z",
          "name": "Test sublet 8",
          "price_cents": 50,
          "cost_cents": null,
          "provider": "",
          "invoice_number": "1111",
          "description": null,
          "taxable": true,
          "vendor_id": null,
          "invoice_date": null
        }
      ],
      "inspections": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:29Z",
          "updated_at": "2021-03-17T14:18:29Z",
          "name": "Test inspection 8",
          "state": "unchecked",
          "detail": "Specifics about the test inspection"
        }
      ]
    }
  ],
  "limit": 1,
  "limited": false,
  "total_count": 1,
  "current_page": 1,
  "total_pages": 1
}</property>
                <property
                  dataType="System.Boolean"
                  description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                  expressionType="Notify"
                  name="OutputAllUpstreamColumns">false</property>
                <property
                  dataType="System.Int32"
                  description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                  expressionType="Notify"
                  name="EmptyInputProcessingMode"
                  typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                <property
                  dataType="System.String"
                  description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                  expressionType="Notify"
                  name="TreatEmptyInputAs">{ }</property>
                <property
                  dataType="System.Int32"
                  description="Maximum JSON records to fetch. Set this value to 0 for all records"
                  expressionType="Notify"
                  name="MaxRows">0</property>
                <property
                  dataType="System.String"
                  description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                  expressionType="Notify"
                  name="Filter"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.results[*]</property>
                <property
                  dataType="System.Boolean"
                  description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                  expressionType="Notify"
                  name="IncludeParentColumns">false</property>
                <property
                  dataType="System.Boolean"
                  description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                  expressionType="Notify"
                  name="IncludeParentColumnsWhenChildMissing">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                  expressionType="Notify"
                  name="IncludeParentColumnsWithArrayType">false</property>
                <property
                  dataType="System.String"
                  description="Filter expression to extract value form parent"
                  expressionType="Notify"
                  name="FilterForParentColumnsWithArrayType"></property>
                <property
                  dataType="System.String"
                  description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                  expressionType="Notify"
                  name="ParentColumnPrefix">P_</property>
                <property
                  dataType="System.Boolean"
                  description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                  expressionType="Notify"
                  name="ThrowErrorIfPropertyMissing">false</property>
                <property
                  dataType="System.Int32"
                  description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                  expressionType="Notify"
                  name="MaxLevelsToScan">0</property>
                <property
                  dataType="System.String"
                  description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                  expressionType="Notify"
                  name="ExcludedProperties"></property>
                <property
                  dataType="System.String"
                  description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                  expressionType="Notify"
                  name="LevelSeparator">_</property>
                <property
                  dataType="System.Boolean"
                  description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                  expressionType="Notify"
                  name="EnableArrayFlattening">false</property>
                <property
                  dataType="System.Int32"
                  description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                  expressionType="Notify"
                  name="MaxArrayItemsToFlatten">10</property>
                <property
                  dataType="System.String"
                  description="Specifies how custom date formatted strings are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateFormatString"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateParseHandling"
                  typeConverter="ZappySys.Common.DateParseHandling">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how decimal values are parsed when reading JSON. Change this setting to Decimal if you like to have large precision / scale."
                  expressionType="Notify"
                  name="FloatParseHandling"
                  typeConverter="ZappySys.Common.FloatParseHandling">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indent JSON output so its easy to read."
                  expressionType="Notify"
                  name="IndentOutput">false</property>
                <property
                  dataType="System.Boolean"
                  description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                  expressionType="Notify"
                  name="OutputRawDocument">false</property>
                <property
                  dataType="System.Boolean"
                  description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                  expressionType="Notify"
                  name="EnablePivot">false</property>
                <property
                  dataType="System.Int32"
                  description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                  expressionType="Notify"
                  name="ArrayTransformationType"
                  typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                <property
                  dataType="System.String"
                  description="Filter expression to use to extract column names for array transformation."
                  expressionType="Notify"
                  name="ArrayTransColumnNameFilter"></property>
                <property
                  dataType="System.String"
                  description="Filter expression for row values (Not applicable for simple array transformation)."
                  expressionType="Notify"
                  name="ArrayTransRowValueFilter"></property>
                <property
                  dataType="System.Boolean"
                  description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } ). If you selected Column less array or JSON Lines option then this property means Column Names coming from First Line of array."
                  expressionType="Notify"
                  name="ArrayTransEnableCustomColumns">false</property>
                <property
                  dataType="System.String"
                  description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                  expressionType="Notify"
                  name="ArrayTransCustomColumns"></property>
                <property
                  dataType="System.Int32"
                  description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                  expressionType="Notify"
                  name="MetaDataScanMode"
                  typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                <property
                  dataType="System.Int32"
                  description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                  expressionType="Notify"
                  name="MetaDataCustomLength">1000</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                <property
                  dataType="System.Boolean"
                  name="EnableBigNumberHandling">false</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Services\Parse SRV_Services.Inputs[JsonParserTransformInput]"
                  errorRowDisposition="FailComponent"
                  name="JsonParserTransformInput"
                  truncationRowDisposition="FailComponent">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Services\Parse SRV_Services.Inputs[JsonParserTransformInput].Columns[__DOCUMENT__]"
                      cachedDataType="nText"
                      cachedName="__DOCUMENT__"
                      lineageId="Package\Get Services\JSON Source (Services).Outputs[JsonSourceOutput].Columns[__DOCUMENT__]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True" />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput]"
                  errorOrTruncationOperation="Error"
                  errorRowDisposition="FailComponent"
                  name="JsonParserTransformOutput"
                  truncationRowDisposition="FailComponent">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[id]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[id]"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[created_at]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[created_at]"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[created_at]"
                      name="created_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[updated_at]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[updated_at]"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[updated_at]"
                      name="updated_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[title]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[title]"
                      length="96"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[title]"
                      name="title" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[completed]"
                      dataType="bool"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[completed]"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[completed]"
                      name="completed" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[category_id]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[category_id]"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[category_id]"
                      name="category_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[canned_job_id]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[canned_job_id]"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[canned_job_id]"
                      name="canned_job_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[comment]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[comment]"
                      length="500"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[comment]"
                      name="comment" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[completed_at]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[completed_at]"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[completed_at]"
                      name="completed_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[last_completed_at]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[last_completed_at]"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[last_completed_at]"
                      name="last_completed_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[labor_rate_cents]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[labor_rate_cents]"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[labor_rate_cents]"
                      name="labor_rate_cents" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[repair_order_id]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[repair_order_id]"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[repair_order_id]"
                      name="repair_order_id" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[id]"
                      dataType="i8"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[created_at]"
                      dataType="wstr"
                      length="80"
                      name="created_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[updated_at]"
                      dataType="wstr"
                      length="80"
                      name="updated_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[title]"
                      dataType="wstr"
                      length="48"
                      name="title" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[completed]"
                      dataType="bool"
                      name="completed" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[category_id]"
                      dataType="wstr"
                      length="1020"
                      name="category_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[canned_job_id]"
                      dataType="wstr"
                      length="1020"
                      name="canned_job_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[comment]"
                      dataType="wstr"
                      length="40"
                      name="comment" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[completed_at]"
                      dataType="wstr"
                      length="1020"
                      name="completed_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[last_completed_at]"
                      dataType="wstr"
                      length="1020"
                      name="last_completed_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[labor_rate_cents]"
                      dataType="i8"
                      name="labor_rate_cents" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[repair_order_id]"
                      dataType="i8"
                      name="repair_order_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[labors]"
                      dataType="wstr"
                      length="848"
                      name="labors" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[parts]"
                      dataType="wstr"
                      length="1332"
                      name="parts" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[hazmats]"
                      dataType="wstr"
                      length="856"
                      name="hazmats" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[sublets]"
                      dataType="wstr"
                      length="1376"
                      name="sublets" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].ExternalColumns[inspections]"
                      dataType="wstr"
                      length="916"
                      name="inspections" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output]"
                  isErrorOut="true"
                  name="JsonParserTransform Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[id]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[created_at]"
                      dataType="wstr"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[created_at]"
                      name="created_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[updated_at]"
                      dataType="wstr"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[updated_at]"
                      name="updated_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[title]"
                      dataType="wstr"
                      length="96"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[title]"
                      name="title" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[completed]"
                      dataType="bool"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[completed]"
                      name="completed" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[category_id]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[category_id]"
                      name="category_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[canned_job_id]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[canned_job_id]"
                      name="canned_job_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[comment]"
                      dataType="wstr"
                      length="500"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[comment]"
                      name="comment" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[completed_at]"
                      dataType="wstr"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[completed_at]"
                      name="completed_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[last_completed_at]"
                      dataType="wstr"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[last_completed_at]"
                      name="last_completed_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[labor_rate_cents]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[labor_rate_cents]"
                      name="labor_rate_cents" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[repair_order_id]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[repair_order_id]"
                      name="repair_order_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                      codePage="1252"
                      dataType="str"
                      length="128"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                      name="ErrorColumnName" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="1024"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                      dataType="nText"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                      name="ErrorRawData" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Services\Parse SRV_Sublets"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="JSON Parser Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="Parse incoming JSON String into columns. You can also parse and transform single JSON record into multiple rows by filtering data based on JSON Path (e.g. $.Customer.Orders[*])"
              name="Parse SRV_Sublets"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any numeric data types"
                  expressionType="Notify"
                  name="TreatBlankNumberAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for bool data types"
                  expressionType="Notify"
                  name="TreatBlankBoolAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any date/time data types"
                  expressionType="Notify"
                  name="TreatBlankDateAsNull">true</property>
                <property
                  dataType="System.Int32"
                  description="Encoding of source file"
                  expressionType="Notify"
                  name="Encoding"
                  typeConverter="ZappySys.Common.EncodingType">0</property>
                <property
                  dataType="System.String"
                  description="Character set for text (e.g. windows-1250 )"
                  expressionType="Notify"
                  name="CharacterSet"></property>
                <property
                  dataType="System.String"
                  description="Sample JSON data used to parse output columns."
                  expressionType="Notify"
                  name="SampleData"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">{
  "results": [
    {
      "id": 22,
      "created_at": "2021-03-17T14:18:28Z",
      "updated_at": "2021-03-17T14:18:29Z",
      "title": "Test Service",
      "completed": false,
      "category_id": null,
      "canned_job_id": null,
      "comment": "No comment",
      "completed_at": null,
      "last_completed_at": null,
      "labor_rate_cents": 10000,
      "repair_order_id": 77,
      "labors": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:28Z",
          "updated_at": "2021-03-17T14:18:28Z",
          "name": "Test labor 8",
          "technician_id": null,
          "taxable": true,
          "hours": 1.0
        }
      ],
      "parts": [
        {
          "id": 17,
          "created_at": "2021-03-17T14:18:28Z",
          "updated_at": "2021-03-17T14:18:28Z",
          "brand": "Acme19",
          "description": "trademark widget",
          "number": "acme-19",
          "quoted_price_cents": 100,
          "cost_cents": 50,
          "part_inventory_id": 21,
          "taxable": true,
          "quantity": 1.0
        }
      ],
      "hazmats": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:28Z",
          "updated_at": "2021-03-17T14:18:28Z",
          "name": "Test hazmat fee 8",
          "fee_cents": 25,
          "taxable": true,
          "quantity": 1.0
        }
      ],
      "sublets": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:29Z",
          "updated_at": "2021-03-17T14:18:29Z",
          "name": "Test sublet 8",
          "price_cents": 50,
          "cost_cents": null,
          "provider": "",
          "invoice_number": "1111",
          "description": null,
          "taxable": true,
          "vendor_id": null,
          "invoice_date": null
        }
      ],
      "inspections": [
        {
          "id": 13,
          "created_at": "2021-03-17T14:18:29Z",
          "updated_at": "2021-03-17T14:18:29Z",
          "name": "Test inspection 8",
          "state": "unchecked",
          "detail": "Specifics about the test inspection"
        }
      ]
    }
  ],
  "limit": 1,
  "limited": false,
  "total_count": 1,
  "current_page": 1,
  "total_pages": 1
}</property>
                <property
                  dataType="System.Boolean"
                  description="Include all upstream parent columns into output except the one you selected to parse. By default only parsed columns from Input document is included in the output. If you wish to include all other upstream columns in the output too then check this option."
                  expressionType="Notify"
                  name="OutputAllUpstreamColumns">false</property>
                <property
                  dataType="System.Int32"
                  description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                  expressionType="Notify"
                  name="EmptyInputProcessingMode"
                  typeConverter="ZappySys.Common.Data.EmptyInputProcessingMode">0</property>
                <property
                  dataType="System.String"
                  description="Defines how to handle empty input. By default NULL or Empty input is skipped from parsing."
                  expressionType="Notify"
                  name="TreatEmptyInputAs">{ }</property>
                <property
                  dataType="System.Int32"
                  description="Maximum JSON records to fetch. Set this value to 0 for all records"
                  expressionType="Notify"
                  name="MaxRows">0</property>
                <property
                  dataType="System.String"
                  description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                  expressionType="Notify"
                  name="Filter"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.results[*].sublets[*]</property>
                <property
                  dataType="System.Boolean"
                  description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                  expressionType="Notify"
                  name="IncludeParentColumns">true</property>
                <property
                  dataType="System.Boolean"
                  description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                  expressionType="Notify"
                  name="IncludeParentColumnsWhenChildMissing">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                  expressionType="Notify"
                  name="IncludeParentColumnsWithArrayType">false</property>
                <property
                  dataType="System.String"
                  description="Filter expression to extract value form parent"
                  expressionType="Notify"
                  name="FilterForParentColumnsWithArrayType"></property>
                <property
                  dataType="System.String"
                  description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                  expressionType="Notify"
                  name="ParentColumnPrefix">P_</property>
                <property
                  dataType="System.Boolean"
                  description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                  expressionType="Notify"
                  name="ThrowErrorIfPropertyMissing">false</property>
                <property
                  dataType="System.Int32"
                  description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                  expressionType="Notify"
                  name="MaxLevelsToScan">0</property>
                <property
                  dataType="System.String"
                  description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                  expressionType="Notify"
                  name="ExcludedProperties"></property>
                <property
                  dataType="System.String"
                  description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                  expressionType="Notify"
                  name="LevelSeparator">_</property>
                <property
                  dataType="System.Boolean"
                  description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                  expressionType="Notify"
                  name="EnableArrayFlattening">false</property>
                <property
                  dataType="System.Int32"
                  description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                  expressionType="Notify"
                  name="MaxArrayItemsToFlatten">10</property>
                <property
                  dataType="System.String"
                  description="Specifies how custom date formatted strings are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateFormatString"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateParseHandling"
                  typeConverter="ZappySys.Common.DateParseHandling">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how decimal values are parsed when reading JSON. Change this setting to Decimal if you like to have large precision / scale."
                  expressionType="Notify"
                  name="FloatParseHandling"
                  typeConverter="ZappySys.Common.FloatParseHandling">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indent JSON output so its easy to read."
                  expressionType="Notify"
                  name="IndentOutput">false</property>
                <property
                  dataType="System.Boolean"
                  description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                  expressionType="Notify"
                  name="OutputRawDocument">false</property>
                <property
                  dataType="System.Boolean"
                  description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                  expressionType="Notify"
                  name="EnablePivot">false</property>
                <property
                  dataType="System.Int32"
                  description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                  expressionType="Notify"
                  name="ArrayTransformationType"
                  typeConverter="ZappySys.Json.ArrayTransformType">0</property>
                <property
                  dataType="System.String"
                  description="Filter expression to use to extract column names for array transformation."
                  expressionType="Notify"
                  name="ArrayTransColumnNameFilter"></property>
                <property
                  dataType="System.String"
                  description="Filter expression for row values (Not applicable for simple array transformation)."
                  expressionType="Notify"
                  name="ArrayTransRowValueFilter"></property>
                <property
                  dataType="System.Boolean"
                  description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } ). If you selected Column less array or JSON Lines option then this property means Column Names coming from First Line of array."
                  expressionType="Notify"
                  name="ArrayTransEnableCustomColumns">false</property>
                <property
                  dataType="System.String"
                  description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                  expressionType="Notify"
                  name="ArrayTransCustomColumns"></property>
                <property
                  dataType="System.Int32"
                  description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                  expressionType="Notify"
                  name="MetaDataScanMode"
                  typeConverter="ZappySys.Common.Data.MetaDataScanMode">4</property>
                <property
                  dataType="System.Int32"
                  description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                  expressionType="Notify"
                  name="MetaDataCustomLength">1000</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.JsonParserTransform</property>
                <property
                  dataType="System.Boolean"
                  name="EnableBigNumberHandling">false</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Services\Parse SRV_Sublets.Inputs[JsonParserTransformInput]"
                  errorRowDisposition="FailComponent"
                  name="JsonParserTransformInput"
                  truncationRowDisposition="FailComponent">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Inputs[JsonParserTransformInput].Columns[__DOCUMENT__]"
                      cachedDataType="nText"
                      cachedName="__DOCUMENT__"
                      lineageId="Package\Get Services\JSON Source (Services).Outputs[JsonSourceOutput].Columns[__DOCUMENT__]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True" />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput]"
                  errorOrTruncationOperation="Error"
                  errorRowDisposition="FailComponent"
                  name="JsonParserTransformOutput"
                  truncationRowDisposition="FailComponent">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[P_results_id]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_id]"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[P_results_id]"
                      name="P_results_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[id]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[id]"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[created_at]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[created_at]"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[created_at]"
                      name="created_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[updated_at]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[updated_at]"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[updated_at]"
                      name="updated_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[name]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[name]"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[name]"
                      name="name" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[price_cents]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[price_cents]"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[price_cents]"
                      name="price_cents" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[cost_cents]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[cost_cents]"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[cost_cents]"
                      name="cost_cents" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[provider]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[provider]"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[provider]"
                      name="provider" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[invoice_number]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[invoice_number]"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[invoice_number]"
                      name="invoice_number" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[description]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[description]"
                      length="1020"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[description]"
                      name="description" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[taxable]"
                      dataType="bool"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[taxable]"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[taxable]"
                      name="taxable" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[vendor_id]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[vendor_id]"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[vendor_id]"
                      name="vendor_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[invoice_date]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[invoice_date]"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[invoice_date]"
                      name="invoice_date" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_id]"
                      dataType="i8"
                      name="P_results_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_created_at]"
                      dataType="wstr"
                      length="80"
                      name="P_results_created_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_updated_at]"
                      dataType="wstr"
                      length="80"
                      name="P_results_updated_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_title]"
                      dataType="wstr"
                      length="48"
                      name="P_results_title" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_completed]"
                      dataType="bool"
                      name="P_results_completed" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_category_id]"
                      dataType="wstr"
                      length="1020"
                      name="P_results_category_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_canned_job_id]"
                      dataType="wstr"
                      length="1020"
                      name="P_results_canned_job_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_comment]"
                      dataType="wstr"
                      length="40"
                      name="P_results_comment" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_completed_at]"
                      dataType="wstr"
                      length="1020"
                      name="P_results_completed_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_last_completed_at]"
                      dataType="wstr"
                      length="1020"
                      name="P_results_last_completed_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_labor_rate_cents]"
                      dataType="i8"
                      name="P_results_labor_rate_cents" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[P_results_repair_order_id]"
                      dataType="i8"
                      name="P_results_repair_order_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[P_limit]"
                      dataType="i8"
                      name="P_limit" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[P_limited]"
                      dataType="bool"
                      name="P_limited" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[P_total_count]"
                      dataType="i8"
                      name="P_total_count" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[P_current_page]"
                      dataType="i8"
                      name="P_current_page" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[P_total_pages]"
                      dataType="i8"
                      name="P_total_pages" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[id]"
                      dataType="i8"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[created_at]"
                      dataType="wstr"
                      length="80"
                      name="created_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[updated_at]"
                      dataType="wstr"
                      length="80"
                      name="updated_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[name]"
                      dataType="wstr"
                      length="52"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[price_cents]"
                      dataType="i8"
                      name="price_cents" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[cost_cents]"
                      dataType="wstr"
                      length="1020"
                      name="cost_cents" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[provider]"
                      dataType="wstr"
                      length="80"
                      name="provider" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[invoice_number]"
                      dataType="wstr"
                      length="16"
                      name="invoice_number" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[description]"
                      dataType="wstr"
                      length="1020"
                      name="description" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[taxable]"
                      dataType="bool"
                      name="taxable" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[vendor_id]"
                      dataType="wstr"
                      length="1020"
                      name="vendor_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].ExternalColumns[invoice_date]"
                      dataType="wstr"
                      length="1020"
                      name="invoice_date" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output]"
                  isErrorOut="true"
                  name="JsonParserTransform Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[P_results_id]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[P_results_id]"
                      name="P_results_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[id]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[created_at]"
                      dataType="wstr"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[created_at]"
                      name="created_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[updated_at]"
                      dataType="wstr"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[updated_at]"
                      name="updated_at" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[name]"
                      dataType="wstr"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[name]"
                      name="name" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[price_cents]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[price_cents]"
                      name="price_cents" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[cost_cents]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[cost_cents]"
                      name="cost_cents" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[provider]"
                      dataType="wstr"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[provider]"
                      name="provider" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[invoice_number]"
                      dataType="wstr"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[invoice_number]"
                      name="invoice_number" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[description]"
                      dataType="wstr"
                      length="1020"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[description]"
                      name="description" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[taxable]"
                      dataType="bool"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[taxable]"
                      name="taxable" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[vendor_id]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[vendor_id]"
                      name="vendor_id" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[invoice_date]"
                      dataType="wstr"
                      length="80"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[invoice_date]"
                      name="invoice_date" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                      codePage="1252"
                      dataType="str"
                      length="128"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[ErrorColumnName]"
                      name="ErrorColumnName" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="1024"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                    <outputColumn
                      refId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                      dataType="nText"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransform Error Output].Columns[ErrorRawData]"
                      name="ErrorRawData" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Services\SRV_Hazmats"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="SRV_Hazmats"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[SRV_Hazmats_TMP]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Services\SRV_Hazmats.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[brakesql.Shopware]"
                  connectionManagerRefId="Package.ConnectionManagers[brakesql.Shopware]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].Columns[P_results_id]"
                      cachedDataType="i4"
                      cachedName="P_results_id"
                      externalMetadataColumnId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].ExternalColumns[P_results_id]"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[P_results_id]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].Columns[id]"
                      cachedDataType="i4"
                      cachedName="id"
                      externalMetadataColumnId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[id]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].Columns[created_at]"
                      cachedDataType="wstr"
                      cachedLength="80"
                      cachedName="created_at"
                      externalMetadataColumnId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].ExternalColumns[created_at]"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[created_at]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].Columns[updated_at]"
                      cachedDataType="wstr"
                      cachedLength="80"
                      cachedName="updated_at"
                      externalMetadataColumnId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].ExternalColumns[updated_at]"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[updated_at]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].Columns[name]"
                      cachedDataType="wstr"
                      cachedLength="88"
                      cachedName="name"
                      externalMetadataColumnId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].ExternalColumns[name]"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[name]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].Columns[fee_cents]"
                      cachedDataType="i4"
                      cachedName="fee_cents"
                      externalMetadataColumnId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].ExternalColumns[fee_cents]"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[fee_cents]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].Columns[taxable]"
                      cachedDataType="bool"
                      cachedName="taxable"
                      externalMetadataColumnId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].ExternalColumns[taxable]"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[taxable]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].Columns[quantity]"
                      cachedDataType="r8"
                      cachedName="quantity"
                      externalMetadataColumnId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].ExternalColumns[quantity]"
                      lineageId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput].Columns[quantity]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      dataType="i4"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].ExternalColumns[created_at]"
                      dataType="wstr"
                      length="80"
                      name="created_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].ExternalColumns[updated_at]"
                      dataType="wstr"
                      length="80"
                      name="updated_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].ExternalColumns[P_results_id]"
                      dataType="i4"
                      name="P_results_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].ExternalColumns[name]"
                      dataType="wstr"
                      length="88"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].ExternalColumns[fee_cents]"
                      dataType="i4"
                      name="fee_cents" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].ExternalColumns[taxable]"
                      dataType="bool"
                      name="taxable" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input].ExternalColumns[quantity]"
                      dataType="r8"
                      name="quantity" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Services\SRV_Hazmats.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Services\SRV_Hazmats.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Services\SRV_Hazmats.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Services\SRV_Hazmats.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Services\SRV_Hazmats.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Services\SRV_Inspections"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="SRV_Inspections"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[SRV_Inspections_TMP]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Services\SRV_Inspections.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[brakesql.Shopware]"
                  connectionManagerRefId="Package.ConnectionManagers[brakesql.Shopware]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].Columns[P_results_id]"
                      cachedDataType="i4"
                      cachedName="P_results_id"
                      externalMetadataColumnId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].ExternalColumns[P_results_id]"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[P_results_id]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].Columns[id]"
                      cachedDataType="i4"
                      cachedName="id"
                      externalMetadataColumnId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[id]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].Columns[created_at]"
                      cachedDataType="wstr"
                      cachedLength="80"
                      cachedName="created_at"
                      externalMetadataColumnId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].ExternalColumns[created_at]"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[created_at]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].Columns[updated_at]"
                      cachedDataType="wstr"
                      cachedLength="80"
                      cachedName="updated_at"
                      externalMetadataColumnId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].ExternalColumns[updated_at]"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[updated_at]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].Columns[name]"
                      cachedDataType="wstr"
                      cachedLength="700"
                      cachedName="name"
                      externalMetadataColumnId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].ExternalColumns[name]"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[name]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].Columns[state]"
                      cachedDataType="wstr"
                      cachedLength="36"
                      cachedName="state"
                      externalMetadataColumnId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].ExternalColumns[state]"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[state]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].Columns[detail]"
                      cachedDataType="wstr"
                      cachedLength="1020"
                      cachedName="detail"
                      externalMetadataColumnId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].ExternalColumns[detail]"
                      lineageId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput].Columns[detail]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      dataType="i4"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].ExternalColumns[created_at]"
                      dataType="wstr"
                      length="80"
                      name="created_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].ExternalColumns[updated_at]"
                      dataType="wstr"
                      length="80"
                      name="updated_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].ExternalColumns[P_results_id]"
                      dataType="i4"
                      name="P_results_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].ExternalColumns[name]"
                      dataType="wstr"
                      length="700"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].ExternalColumns[state]"
                      dataType="wstr"
                      length="36"
                      name="state" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input].ExternalColumns[detail]"
                      dataType="wstr"
                      length="1020"
                      name="detail" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Services\SRV_Inspections.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Services\SRV_Inspections.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Services\SRV_Inspections.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Services\SRV_Inspections.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Services\SRV_Inspections.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Services\SRV_Labors"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="SRV_Labors"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[SRV_Labors_TMP]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Services\SRV_Labors.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[brakesql.Shopware]"
                  connectionManagerRefId="Package.ConnectionManagers[brakesql.Shopware]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].Columns[P_results_id]"
                      cachedDataType="i4"
                      cachedName="P_results_id"
                      externalMetadataColumnId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].ExternalColumns[P_results_id]"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[P_results_id]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].Columns[id]"
                      cachedDataType="i4"
                      cachedName="id"
                      externalMetadataColumnId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[id]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].Columns[created_at]"
                      cachedDataType="wstr"
                      cachedLength="80"
                      cachedName="created_at"
                      externalMetadataColumnId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].ExternalColumns[created_at]"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[created_at]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].Columns[updated_at]"
                      cachedDataType="wstr"
                      cachedLength="80"
                      cachedName="updated_at"
                      externalMetadataColumnId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].ExternalColumns[updated_at]"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[updated_at]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].Columns[name]"
                      cachedDataType="wstr"
                      cachedLength="576"
                      cachedName="name"
                      externalMetadataColumnId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].ExternalColumns[name]"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[name]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].Columns[technician_id]"
                      cachedDataType="i4"
                      cachedName="technician_id"
                      externalMetadataColumnId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].ExternalColumns[technician_id]"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[technician_id]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].Columns[taxable]"
                      cachedDataType="bool"
                      cachedName="taxable"
                      externalMetadataColumnId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].ExternalColumns[taxable]"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[taxable]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].Columns[hours]"
                      cachedDataType="r8"
                      cachedName="hours"
                      externalMetadataColumnId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].ExternalColumns[hours]"
                      lineageId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput].Columns[hours]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      dataType="i4"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].ExternalColumns[created_at]"
                      dataType="wstr"
                      length="80"
                      name="created_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].ExternalColumns[updated_at]"
                      dataType="wstr"
                      length="80"
                      name="updated_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].ExternalColumns[P_results_id]"
                      dataType="i4"
                      name="P_results_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].ExternalColumns[name]"
                      dataType="wstr"
                      length="576"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].ExternalColumns[technician_id]"
                      dataType="i4"
                      name="technician_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].ExternalColumns[taxable]"
                      dataType="bool"
                      name="taxable" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input].ExternalColumns[hours]"
                      dataType="r8"
                      name="hours" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Services\SRV_Labors.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Services\SRV_Labors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Services\SRV_Labors.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Services\SRV_Labors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Services\SRV_Labors.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Services\SRV_Parts"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="SRV_Parts"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[SRV_Parts_TMP]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Services\SRV_Parts.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[brakesql.Shopware]"
                  connectionManagerRefId="Package.ConnectionManagers[brakesql.Shopware]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].Columns[P_results_id]"
                      cachedDataType="i4"
                      cachedName="P_results_id"
                      externalMetadataColumnId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[P_results_id]"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[P_results_id]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].Columns[id]"
                      cachedDataType="i4"
                      cachedName="id"
                      externalMetadataColumnId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[id]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].Columns[created_at]"
                      cachedDataType="wstr"
                      cachedLength="80"
                      cachedName="created_at"
                      externalMetadataColumnId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[created_at]"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[created_at]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].Columns[updated_at]"
                      cachedDataType="wstr"
                      cachedLength="80"
                      cachedName="updated_at"
                      externalMetadataColumnId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[updated_at]"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[updated_at]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].Columns[brand]"
                      cachedDataType="wstr"
                      cachedLength="60"
                      cachedName="brand"
                      externalMetadataColumnId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[brand]"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[brand]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].Columns[description]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="description"
                      externalMetadataColumnId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[description]"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[description]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].Columns[number]"
                      cachedDataType="wstr"
                      cachedLength="80"
                      cachedName="number"
                      externalMetadataColumnId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[number]"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[number]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].Columns[quoted_price_cents]"
                      cachedDataType="i4"
                      cachedName="quoted_price_cents"
                      externalMetadataColumnId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[quoted_price_cents]"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[quoted_price_cents]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].Columns[cost_cents]"
                      cachedDataType="i4"
                      cachedName="cost_cents"
                      externalMetadataColumnId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[cost_cents]"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[cost_cents]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].Columns[part_inventory_id]"
                      cachedDataType="i4"
                      cachedName="part_inventory_id"
                      externalMetadataColumnId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[part_inventory_id]"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[part_inventory_id]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].Columns[taxable]"
                      cachedDataType="bool"
                      cachedName="taxable"
                      externalMetadataColumnId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[taxable]"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[taxable]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].Columns[quantity]"
                      cachedDataType="r8"
                      cachedName="quantity"
                      externalMetadataColumnId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[quantity]"
                      lineageId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput].Columns[quantity]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      dataType="i4"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[created_at]"
                      dataType="wstr"
                      length="80"
                      name="created_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[updated_at]"
                      dataType="wstr"
                      length="80"
                      name="updated_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[P_results_id]"
                      dataType="i4"
                      name="P_results_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[brand]"
                      dataType="wstr"
                      length="60"
                      name="brand" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[description]"
                      dataType="wstr"
                      length="255"
                      name="description" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[number]"
                      dataType="wstr"
                      length="80"
                      name="number" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[quoted_price_cents]"
                      dataType="i4"
                      name="quoted_price_cents" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[cost_cents]"
                      dataType="i4"
                      name="cost_cents" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[part_inventory_id]"
                      dataType="i4"
                      name="part_inventory_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[taxable]"
                      dataType="bool"
                      name="taxable" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input].ExternalColumns[quantity]"
                      dataType="r8"
                      name="quantity" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Services\SRV_Parts.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Services\SRV_Parts.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Services\SRV_Parts.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Services\SRV_Parts.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Services\SRV_Parts.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Services\SRV_Services"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="SRV_Services"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[SRV_Services_TMP]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Services\SRV_Services.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[brakesql.Shopware]"
                  connectionManagerRefId="Package.ConnectionManagers[brakesql.Shopware]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].Columns[id]"
                      cachedDataType="i4"
                      cachedName="id"
                      externalMetadataColumnId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[id]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].Columns[created_at]"
                      cachedDataType="wstr"
                      cachedLength="80"
                      cachedName="created_at"
                      externalMetadataColumnId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[created_at]"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[created_at]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].Columns[updated_at]"
                      cachedDataType="wstr"
                      cachedLength="80"
                      cachedName="updated_at"
                      externalMetadataColumnId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[updated_at]"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[updated_at]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].Columns[title]"
                      cachedDataType="wstr"
                      cachedLength="96"
                      cachedName="title"
                      externalMetadataColumnId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[title]"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[title]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].Columns[completed]"
                      cachedDataType="bool"
                      cachedName="completed"
                      externalMetadataColumnId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[completed]"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[completed]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].Columns[category_id]"
                      cachedDataType="i4"
                      cachedName="category_id"
                      externalMetadataColumnId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[category_id]"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[category_id]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].Columns[canned_job_id]"
                      cachedDataType="i4"
                      cachedName="canned_job_id"
                      externalMetadataColumnId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[canned_job_id]"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[canned_job_id]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].Columns[comment]"
                      cachedDataType="wstr"
                      cachedLength="500"
                      cachedName="comment"
                      externalMetadataColumnId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[comment]"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[comment]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].Columns[completed_at]"
                      cachedDataType="wstr"
                      cachedLength="80"
                      cachedName="completed_at"
                      externalMetadataColumnId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[completed_at]"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[completed_at]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].Columns[last_completed_at]"
                      cachedDataType="wstr"
                      cachedLength="80"
                      cachedName="last_completed_at"
                      externalMetadataColumnId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[last_completed_at]"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[last_completed_at]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].Columns[labor_rate_cents]"
                      cachedDataType="i4"
                      cachedName="labor_rate_cents"
                      externalMetadataColumnId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[labor_rate_cents]"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[labor_rate_cents]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].Columns[repair_order_id]"
                      cachedDataType="i4"
                      cachedName="repair_order_id"
                      externalMetadataColumnId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[repair_order_id]"
                      lineageId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput].Columns[repair_order_id]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      dataType="i4"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[created_at]"
                      dataType="wstr"
                      length="80"
                      name="created_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[updated_at]"
                      dataType="wstr"
                      length="80"
                      name="updated_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[title]"
                      dataType="wstr"
                      length="96"
                      name="title" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[completed]"
                      dataType="bool"
                      name="completed" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[category_id]"
                      dataType="i4"
                      name="category_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[canned_job_id]"
                      dataType="i4"
                      name="canned_job_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[comment]"
                      dataType="wstr"
                      length="500"
                      name="comment" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[labor_rate_cents]"
                      dataType="i4"
                      name="labor_rate_cents" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[repair_order_id]"
                      dataType="i4"
                      name="repair_order_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[completed_at]"
                      dataType="wstr"
                      length="80"
                      name="completed_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input].ExternalColumns[last_completed_at]"
                      dataType="wstr"
                      length="80"
                      name="last_completed_at" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Services\SRV_Services.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Services\SRV_Services.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Services\SRV_Services.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Services\SRV_Services.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Services\SRV_Services.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Services\SRV_Sublets"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="SRV_Sublets"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[SRV_Sublets_TMP]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Services\SRV_Sublets.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[brakesql.Shopware]"
                  connectionManagerRefId="Package.ConnectionManagers[brakesql.Shopware]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].Columns[P_results_id]"
                      cachedDataType="i4"
                      cachedName="P_results_id"
                      externalMetadataColumnId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[P_results_id]"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[P_results_id]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].Columns[id]"
                      cachedDataType="i4"
                      cachedName="id"
                      externalMetadataColumnId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[id]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].Columns[created_at]"
                      cachedDataType="wstr"
                      cachedLength="80"
                      cachedName="created_at"
                      externalMetadataColumnId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[created_at]"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[created_at]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].Columns[updated_at]"
                      cachedDataType="wstr"
                      cachedLength="80"
                      cachedName="updated_at"
                      externalMetadataColumnId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[updated_at]"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[updated_at]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].Columns[name]"
                      cachedDataType="wstr"
                      cachedLength="80"
                      cachedName="name"
                      externalMetadataColumnId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[name]"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[name]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].Columns[price_cents]"
                      cachedDataType="i4"
                      cachedName="price_cents"
                      externalMetadataColumnId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[price_cents]"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[price_cents]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].Columns[cost_cents]"
                      cachedDataType="i4"
                      cachedName="cost_cents"
                      externalMetadataColumnId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[cost_cents]"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[cost_cents]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].Columns[provider]"
                      cachedDataType="wstr"
                      cachedLength="80"
                      cachedName="provider"
                      externalMetadataColumnId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[provider]"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[provider]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].Columns[invoice_number]"
                      cachedDataType="wstr"
                      cachedLength="80"
                      cachedName="invoice_number"
                      externalMetadataColumnId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[invoice_number]"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[invoice_number]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].Columns[description]"
                      cachedDataType="wstr"
                      cachedLength="1020"
                      cachedName="description"
                      externalMetadataColumnId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[description]"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[description]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].Columns[taxable]"
                      cachedDataType="bool"
                      cachedName="taxable"
                      externalMetadataColumnId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[taxable]"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[taxable]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].Columns[vendor_id]"
                      cachedDataType="i4"
                      cachedName="vendor_id"
                      externalMetadataColumnId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[vendor_id]"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[vendor_id]" />
                    <inputColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].Columns[invoice_date]"
                      cachedDataType="wstr"
                      cachedLength="80"
                      cachedName="invoice_date"
                      externalMetadataColumnId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[invoice_date]"
                      lineageId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput].Columns[invoice_date]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      dataType="i4"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[created_at]"
                      dataType="wstr"
                      length="80"
                      name="created_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[updated_at]"
                      dataType="wstr"
                      length="80"
                      name="updated_at" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[P_results_id]"
                      dataType="i4"
                      name="P_results_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[name]"
                      dataType="wstr"
                      length="80"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[price_cents]"
                      dataType="i4"
                      name="price_cents" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[cost_cents]"
                      dataType="wstr"
                      length="1020"
                      name="cost_cents" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[provider]"
                      dataType="wstr"
                      length="80"
                      name="provider" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[invoice_number]"
                      dataType="wstr"
                      length="80"
                      name="invoice_number" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[description]"
                      dataType="wstr"
                      length="1020"
                      name="description" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[taxable]"
                      dataType="bool"
                      name="taxable" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[vendor_id]"
                      dataType="i4"
                      name="vendor_id" />
                    <externalMetadataColumn
                      refId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input].ExternalColumns[invoice_date]"
                      dataType="wstr"
                      length="1020"
                      name="invoice_date" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Services\SRV_Sublets.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Services\SRV_Sublets.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Services\SRV_Sublets.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Services\SRV_Sublets.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Services\SRV_Sublets.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Get Services.Paths[JsonParserTransformOutput]"
              endId="Package\Get Services\SRV_Services.Inputs[OLE DB Destination Input]"
              name="JsonParserTransformOutput"
              startId="Package\Get Services\Parse SRV_Services.Outputs[JsonParserTransformOutput]" />
            <path
              refId="Package\Get Services.Paths[JsonParserTransformOutput1]"
              endId="Package\Get Services\SRV_Hazmats.Inputs[OLE DB Destination Input]"
              name="JsonParserTransformOutput"
              startId="Package\Get Services\Parse SRV_Hazmats.Outputs[JsonParserTransformOutput]" />
            <path
              refId="Package\Get Services.Paths[JsonParserTransformOutput2]"
              endId="Package\Get Services\SRV_Inspections.Inputs[OLE DB Destination Input]"
              name="JsonParserTransformOutput"
              startId="Package\Get Services\Parse SRV_Inspections.Outputs[JsonParserTransformOutput]" />
            <path
              refId="Package\Get Services.Paths[JsonParserTransformOutput3]"
              endId="Package\Get Services\SRV_Labors.Inputs[OLE DB Destination Input]"
              name="JsonParserTransformOutput"
              startId="Package\Get Services\Parse SRV_Labors.Outputs[JsonParserTransformOutput]" />
            <path
              refId="Package\Get Services.Paths[JsonParserTransformOutput4]"
              endId="Package\Get Services\SRV_Parts.Inputs[OLE DB Destination Input]"
              name="JsonParserTransformOutput"
              startId="Package\Get Services\Parse SRV_Parts.Outputs[JsonParserTransformOutput]" />
            <path
              refId="Package\Get Services.Paths[JsonParserTransformOutput5]"
              endId="Package\Get Services\SRV_Sublets.Inputs[OLE DB Destination Input]"
              name="JsonParserTransformOutput"
              startId="Package\Get Services\Parse SRV_Sublets.Outputs[JsonParserTransformOutput]" />
            <path
              refId="Package\Get Services.Paths[JsonSourceOutput]"
              endId="Package\Get Services\Multicast.Inputs[Multicast Input 1]"
              name="JsonSourceOutput"
              startId="Package\Get Services\JSON Source (Services).Outputs[JsonSourceOutput]" />
            <path
              refId="Package\Get Services.Paths[Multicast Output 1]"
              endId="Package\Get Services\Parse SRV_Sublets.Inputs[JsonParserTransformInput]"
              name="Multicast Output 1"
              startId="Package\Get Services\Multicast.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Get Services.Paths[Multicast Output 2]"
              endId="Package\Get Services\Parse SRV_Parts.Inputs[JsonParserTransformInput]"
              name="Multicast Output 2"
              startId="Package\Get Services\Multicast.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Get Services.Paths[Multicast Output 3]"
              endId="Package\Get Services\Parse SRV_Labors.Inputs[JsonParserTransformInput]"
              name="Multicast Output 3"
              startId="Package\Get Services\Multicast.Outputs[Multicast Output 3]" />
            <path
              refId="Package\Get Services.Paths[Multicast Output 4]"
              endId="Package\Get Services\Parse SRV_Services.Inputs[JsonParserTransformInput]"
              name="Multicast Output 4"
              startId="Package\Get Services\Multicast.Outputs[Multicast Output 4]" />
            <path
              refId="Package\Get Services.Paths[Multicast Output 5]"
              endId="Package\Get Services\Parse SRV_Hazmats.Inputs[JsonParserTransformInput]"
              name="Multicast Output 5"
              startId="Package\Get Services\Multicast.Outputs[Multicast Output 5]" />
            <path
              refId="Package\Get Services.Paths[Multicast Output 6]"
              endId="Package\Get Services\Parse SRV_Inspections.Inputs[JsonParserTransformInput]"
              name="Multicast Output 6"
              startId="Package\Get Services\Multicast.Outputs[Multicast Output 6]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Insert new records"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8CC1790A-B8E2-4DED-8360-5406FE0B4C2B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Insert new records"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E8651885-F138-4CAE-834E-E8F180FFA9D3}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="INSERT INTO [Shopware].[dbo].[SRV_Services] &#xA;SELECT * FROM [Shopware].[dbo].[SRV_Services_TMP]&#xA;GO&#xA;&#xA;INSERT INTO [Shopware].[dbo].[SRV_Hazmats] &#xA;SELECT * FROM [Shopware].[dbo].[SRV_Hazmats_TMP]&#xA;GO&#xA;&#xA;INSERT INTO [Shopware].[dbo].[SRV_Inspections] &#xA;SELECT * FROM [Shopware].[dbo].[SRV_Inspections_TMP]&#xA;GO&#xA;&#xA;INSERT INTO [Shopware].[dbo].[SRV_Labors] &#xA;SELECT * FROM [Shopware].[dbo].[SRV_Labors_TMP]&#xA;GO&#xA;&#xA;INSERT INTO [Shopware].[dbo].[SRV_Parts] &#xA;SELECT * FROM [Shopware].[dbo].[SRV_Parts_TMP]&#xA;GO&#xA;&#xA;INSERT INTO [Shopware].[dbo].[SRV_Sublets] &#xA;SELECT * FROM [Shopware].[dbo].[SRV_Sublets_TMP]&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Purge Services TMP tables"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{F8EA99FE-A718-409B-92F0-BE2B7048F587}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Purge Services TMP tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E8651885-F138-4CAE-834E-E8F180FFA9D3}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="DELETE from [Shopware].[dbo].[SRV_Services_TMP]&#xA;GO&#xA;DELETE from [Shopware].[dbo].[SRV_Hazmats_TMP]&#xA;GO&#xA;DELETE from [Shopware].[dbo].[SRV_Inspections_TMP]&#xA;GO&#xA;DELETE from [Shopware].[dbo].[SRV_Labors_TMP]&#xA;GO&#xA;DELETE from [Shopware].[dbo].[SRV_Parts_TMP]&#xA;GO&#xA;DELETE from [Shopware].[dbo].[SRV_Sublets_TMP]&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{40F23BCF-0254-4BFA-9004-C3FCD21DEE2E}"
      DTS:From="Package\Purge Services TMP tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Get Last Updated" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{72400857-5B9F-44B7-908E-FBCF720BF2F6}"
      DTS:From="Package\Get Last Updated"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Get Services" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{DB25BBDF-66B3-4DF8-ACF7-587BBD4565A3}"
      DTS:From="Package\Get Services"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Delete duplicates" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{C488B822-4929-44DB-AA72-71D0F99EB4BD}"
      DTS:From="Package\Delete duplicates"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Insert new records" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="212,42"
          Id="Package\Purge Services TMP tables"
          TopLeft="173,21" />
        <NodeLayout
          Size="165,42"
          Id="Package\Get Last Updated"
          TopLeft="275,102" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="279,63">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="78.5,39"
              Start="0,0"
              End="78.5,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.5"
                    Point2="0,19.5"
                    Point3="4,19.5" />
                  <mssgle:LineSegment
                    End="74.5,19.5" />
                  <mssgle:CubicBezierSegment
                    Point1="74.5,19.5"
                    Point2="78.5,19.5"
                    Point3="78.5,23.5" />
                  <mssgle:LineSegment
                    End="78.5,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="142,42"
          Id="Package\Get Services"
          TopLeft="374,186" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="357.5,144">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="87.5,42"
              Start="0,0"
              End="87.5,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17"
                    Point2="0,21"
                    Point3="4,21" />
                  <mssgle:LineSegment
                    End="83.5,21" />
                  <mssgle:CubicBezierSegment
                    Point1="83.5,21"
                    Point2="87.5,21"
                    Point3="87.5,25" />
                  <mssgle:LineSegment
                    End="87.5,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="163,42"
          Id="Package\Delete duplicates"
          TopLeft="431,272" />
        <NodeLayout
          Size="169,42"
          Id="Package\Insert new records"
          TopLeft="597,364" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="445,228">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="67.5,44"
              Start="0,0"
              End="67.5,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18"
                    Point2="0,22"
                    Point3="4,22" />
                  <mssgle:LineSegment
                    End="63.5,22" />
                  <mssgle:CubicBezierSegment
                    Point1="63.5,22"
                    Point2="67.5,22"
                    Point3="67.5,26" />
                  <mssgle:LineSegment
                    End="67.5,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="512.5,314">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="169,50"
              Start="0,0"
              End="169,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21"
                    Point2="0,25"
                    Point3="4,25" />
                  <mssgle:LineSegment
                    End="165,25" />
                  <mssgle:CubicBezierSegment
                    Point1="165,25"
                    Point2="169,25"
                    Point3="169,29" />
                  <mssgle:LineSegment
                    End="169,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Get Services">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="199,42"
          Id="Package\Get Services\JSON Source (Services)"
          TopLeft="467,30" />
        <NodeLayout
          Size="182,42"
          Id="Package\Get Services\Parse SRV_Services"
          TopLeft="238,30" />
        <NodeLayout
          Size="183,42"
          Id="Package\Get Services\Parse SRV_Hazmats"
          TopLeft="245,108" />
        <NodeLayout
          Size="195,42"
          Id="Package\Get Services\Parse SRV_Inspections"
          TopLeft="248,191" />
        <NodeLayout
          Size="176,42"
          Id="Package\Get Services\Parse SRV_Sublets"
          TopLeft="739,28" />
        <NodeLayout
          Size="165,42"
          Id="Package\Get Services\Parse SRV_Parts"
          TopLeft="741,111" />
        <NodeLayout
          Size="173,42"
          Id="Package\Get Services\Parse SRV_Labors"
          TopLeft="734,192" />
        <NodeLayout
          Size="123,42"
          Id="Package\Get Services\Multicast"
          TopLeft="509,115" />
        <EdgeLayout
          Id="Package\Get Services.Paths[JsonSourceOutput]"
          TopLeft="568.5,72">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43"
              Start="0,0"
              End="0,35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Services.Paths[Multicast Output 1]"
          TopLeft="599.25,115">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="227.75,-45"
              Start="0,0"
              End="227.75,-37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-11.6366047745358" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-11.6366047745358"
                    Point2="0,-15.6366047745358"
                    Point3="4,-15.6366047745358" />
                  <mssgle:LineSegment
                    End="223.75,-15.6366047745358" />
                  <mssgle:CubicBezierSegment
                    Point1="223.75,-15.6366047745358"
                    Point2="227.75,-15.6366047745358"
                    Point3="227.75,-19.6366047745358" />
                  <mssgle:LineSegment
                    End="227.75,-37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Services.Paths[Multicast Output 2]"
          TopLeft="632,134">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="109,0"
              Start="0,0"
              End="101.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="101.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Services.Paths[Multicast Output 3]"
          TopLeft="589.666666666667,157">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="230.833333333333,35"
              Start="0,0"
              End="230.833333333333,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.2696629213483" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.2696629213483"
                    Point2="0,14.2696629213483"
                    Point3="4,14.2696629213483" />
                  <mssgle:LineSegment
                    End="226.833333333333,14.2696629213483" />
                  <mssgle:CubicBezierSegment
                    Point1="226.833333333333,14.2696629213483"
                    Point2="230.833333333333,14.2696629213483"
                    Point3="230.833333333333,18.2696629213483" />
                  <mssgle:LineSegment
                    End="230.833333333333,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Services.Paths[Multicast Output 4]"
          TopLeft="541.75,115">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-212.75,-43"
              Start="0,0"
              End="-212.75,-35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-10.9416445623342" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-10.9416445623342"
                    Point2="0,-14.9416445623342"
                    Point3="-4,-14.9416445623342" />
                  <mssgle:LineSegment
                    End="-208.75,-14.9416445623342" />
                  <mssgle:CubicBezierSegment
                    Point1="-208.75,-14.9416445623342"
                    Point2="-212.75,-14.9416445623342"
                    Point3="-212.75,-18.9416445623342" />
                  <mssgle:LineSegment
                    End="-212.75,-35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Services.Paths[Multicast Output 5]"
          TopLeft="509,132.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-81,0"
              Start="0,0"
              End="-73.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-73.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Services.Paths[Multicast Output 6]"
          TopLeft="551.333333333333,157">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-205.833333333333,34"
              Start="0,0"
              End="-205.833333333333,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.86195826645266" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.86195826645266"
                    Point2="0,13.8619582664527"
                    Point3="-4,13.8619582664527" />
                  <mssgle:LineSegment
                    End="-201.833333333333,13.8619582664527" />
                  <mssgle:CubicBezierSegment
                    Point1="-201.833333333333,13.8619582664527"
                    Point2="-205.833333333333,13.8619582664527"
                    Point3="-205.833333333333,17.8619582664527" />
                  <mssgle:LineSegment
                    End="-205.833333333333,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="163,42"
          Id="Package\Get Services\SRV_Inspections"
          TopLeft="259,273" />
        <NodeLayout
          Size="141,42"
          Id="Package\Get Services\SRV_Labors"
          TopLeft="751,272" />
        <NodeLayout
          Size="151,42"
          Id="Package\Get Services\SRV_Hazmats"
          TopLeft="45,114" />
        <NodeLayout
          Size="150,42"
          Id="Package\Get Services\SRV_Services"
          TopLeft="35,34" />
        <NodeLayout
          Size="144,42"
          Id="Package\Get Services\SRV_Sublets"
          TopLeft="964,33" />
        <NodeLayout
          Size="133,42"
          Id="Package\Get Services\SRV_Parts"
          TopLeft="946,113" />
        <EdgeLayout
          Id="Package\Get Services.Paths[JsonParserTransformOutput]"
          TopLeft="238,53">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-53,0"
              Start="0,0"
              End="-45.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-45.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Services.Paths[JsonParserTransformOutput1]"
          TopLeft="245,132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-49,0"
              Start="0,0"
              End="-41.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-41.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Services.Paths[JsonParserTransformOutput2]"
          TopLeft="343,233">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40"
              Start="0,0"
              End="0,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Services.Paths[JsonParserTransformOutput3]"
          TopLeft="821,234">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Services.Paths[JsonParserTransformOutput4]"
          TopLeft="906,133">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="40,0"
              Start="0,0"
              End="32.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="32.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Services.Paths[JsonParserTransformOutput5]"
          TopLeft="915,51.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="49,0"
              Start="0,0"
              End="41.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="41.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Get Services\SRV_Inspections">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get Services\SRV_Labors">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get Services\SRV_Hazmats">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get Services\SRV_Services">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get Services\SRV_Sublets">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get Services\SRV_Parts">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>